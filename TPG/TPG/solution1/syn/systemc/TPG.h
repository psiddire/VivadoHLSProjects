// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _TPG_HH_
#define _TPG_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "TPG_am_submul_12nbkb.h"
#include "TPG_mul_mul_7s_21cud.h"

namespace ap_rtl {

struct TPG : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > in_0_data_input;
    sc_in< sc_lv<32> > in_0_lincoeff;
    sc_out< sc_lv<32> > out_0_filOut;
    sc_out< sc_logic > out_0_filOut_ap_vld;
    sc_out< sc_logic > out_0_peakOut;
    sc_out< sc_logic > out_0_peakOut_ap_vld;
    sc_out< sc_lv<16> > out_0_peakAmp;
    sc_out< sc_logic > out_0_peakAmp_ap_vld;


    // Module declarations
    TPG(sc_module_name name);
    SC_HAS_PROCESS(TPG);

    ~TPG();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    TPG_am_submul_12nbkb<1,1,12,12,8,21>* TPG_am_submul_12nbkb_U1;
    TPG_mul_mul_7s_21cud<1,1,7,21,32>* TPG_mul_mul_7s_21cud_U2;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_shift_reg_0_3;
    sc_signal< sc_lv<21> > reg_shift_reg_0_2;
    sc_signal< sc_lv<21> > reg_shift_reg_0_1;
    sc_signal< sc_lv<21> > reg_shift_reg_0_0;
    sc_signal< sc_lv<18> > reg_peak_reg_0_0;
    sc_signal< sc_lv<18> > reg_peak_reg_0_1;
    sc_signal< sc_lv<12> > base_fu_195_p1;
    sc_signal< sc_lv<12> > base_reg_654;
    sc_signal< sc_lv<4> > shiftlin_reg_659;
    sc_signal< sc_lv<8> > mult_reg_664;
    sc_signal< sc_lv<21> > grp_fu_640_p3;
    sc_signal< sc_lv<21> > prod_reg_669;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<21> > linearizerOutput_fu_246_p2;
    sc_signal< sc_lv<21> > linearizerOutput_reg_674;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_lv<26> > tmp_13_i_reg_679;
    sc_signal< sc_lv<32> > pro_1_i_fu_648_p2;
    sc_signal< sc_lv<32> > pro_1_i_reg_684;
    sc_signal< sc_lv<19> > tmp_5_reg_689;
    sc_signal< sc_lv<18> > tmp_15_fu_503_p1;
    sc_signal< sc_lv<18> > tmp_15_reg_694;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<10> > tmp_16_reg_699;
    sc_signal< sc_lv<32> > extLd9_fu_259_p1;
    sc_signal< sc_lv<18> > o_filOut_fu_522_p3;
    sc_signal< sc_lv<1> > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > tmp_fu_171_p4;
    sc_signal< sc_lv<1> > icmp_fu_181_p2;
    sc_signal< sc_lv<24> > tmp_2_fu_167_p1;
    sc_signal< sc_lv<24> > tmp_1_fu_187_p3;
    sc_signal< sc_lv<12> > uncorrectedADC_fu_219_p1;
    sc_signal< sc_lv<5> > tmp_6_i_cast_fu_233_p1;
    sc_signal< sc_lv<5> > tmp_8_i_fu_236_p2;
    sc_signal< sc_lv<21> > tmp_8_i_cast_fu_242_p1;
    sc_signal< sc_lv<32> > tmp_7_fu_269_p2;
    sc_signal< sc_lv<32> > p_neg_i_fu_275_p2;
    sc_signal< sc_lv<32> > tmp_9_fu_281_p2;
    sc_signal< sc_lv<32> > pro_fu_287_p2;
    sc_signal< sc_lv<19> > tmp_13_fu_303_p1;
    sc_signal< sc_lv<24> > p_shl8_i_fu_307_p3;
    sc_signal< sc_lv<22> > p_shl9_i_fu_319_p3;
    sc_signal< sc_lv<25> > p_shl8_i_cast_fu_315_p1;
    sc_signal< sc_lv<25> > p_shl9_i_cast_fu_327_p1;
    sc_signal< sc_lv<25> > pro_1_3_i_fu_331_p2;
    sc_signal< sc_lv<26> > tmp_15_i_fu_379_p4;
    sc_signal< sc_lv<19> > tmp_11_fu_392_p4;
    sc_signal< sc_lv<26> > tmp_3_fu_406_p3;
    sc_signal< sc_lv<27> > p_shl1_i_cast_fu_414_p1;
    sc_signal< sc_lv<27> > extLd_cast_fu_361_p1;
    sc_signal< sc_lv<27> > pro_1_2_i_fu_418_p2;
    sc_signal< sc_lv<21> > tmp_12_fu_424_p4;
    sc_signal< sc_lv<27> > mul_i_cast_43_fu_434_p1;
    sc_signal< sc_lv<27> > mul_1_i_cast_fu_402_p1;
    sc_signal< sc_lv<27> > tmp2_fu_441_p2;
    sc_signal< sc_lv<27> > mul_3_i_cast_fu_438_p1;
    sc_signal< sc_lv<27> > mul_i_cast_fu_388_p1;
    sc_signal< sc_lv<27> > tmp4_fu_451_p2;
    sc_signal< sc_lv<28> > mul_cast_fu_376_p1;
    sc_signal< sc_lv<28> > tmp4_cast_fu_457_p1;
    sc_signal< sc_lv<28> > tmp3_fu_461_p2;
    sc_signal< sc_lv<29> > tmp2_cast_fu_447_p1;
    sc_signal< sc_lv<29> > tmp3_cast_fu_467_p1;
    sc_signal< sc_lv<28> > tmp_6_fu_471_p1;
    sc_signal< sc_lv<29> > acc_1_3_i_fu_475_p2;
    sc_signal< sc_lv<1> > tmp_14_fu_487_p3;
    sc_signal< sc_lv<28> > acc_1_3_i_cast_fu_481_p2;
    sc_signal< sc_lv<28> > p_acc_i_fu_495_p3;
    sc_signal< sc_lv<1> > icmp1_fu_517_p2;
    sc_signal< sc_lv<1> > tmp_19_i_fu_538_p2;
    sc_signal< sc_lv<1> > tmp_20_i_fu_548_p2;
    sc_signal< sc_lv<6> > tmp_17_fu_561_p4;
    sc_signal< sc_lv<1> > icmp2_fu_571_p2;
    sc_signal< sc_lv<16> > tmp_8_fu_577_p4;
    sc_signal< sc_lv<16> > tmpPeak_fu_587_p3;
    sc_signal< sc_lv<6> > tmp_19_fu_599_p4;
    sc_signal< sc_lv<1> > icmp3_fu_609_p2;
    sc_signal< sc_lv<10> > tmp_18_fu_595_p1;
    sc_signal< sc_lv<10> > tmpPeak_2_fu_615_p3;
    sc_signal< sc_lv<12> > grp_fu_640_p0;
    sc_signal< sc_lv<12> > grp_fu_640_p1;
    sc_signal< sc_lv<8> > grp_fu_640_p2;
    sc_signal< sc_lv<7> > pro_1_i_fu_648_p0;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_lv<13> > grp_fu_640_p00;
    sc_signal< sc_lv<13> > grp_fu_640_p10;
    sc_signal< sc_lv<21> > grp_fu_640_p20;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<28> ap_const_lv28_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<18> ap_const_lv18_3FFFF;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<16> ap_const_lv16_3FF;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<10> ap_const_lv10_3FF;
    static const sc_lv<32> ap_const_lv32_FFFFFFDD;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc_1_3_i_cast_fu_481_p2();
    void thread_acc_1_3_i_fu_475_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_base_fu_195_p1();
    void thread_extLd9_fu_259_p1();
    void thread_extLd_cast_fu_361_p1();
    void thread_grp_fu_640_p0();
    void thread_grp_fu_640_p00();
    void thread_grp_fu_640_p1();
    void thread_grp_fu_640_p10();
    void thread_grp_fu_640_p2();
    void thread_grp_fu_640_p20();
    void thread_icmp1_fu_517_p2();
    void thread_icmp2_fu_571_p2();
    void thread_icmp3_fu_609_p2();
    void thread_icmp_fu_181_p2();
    void thread_linearizerOutput_fu_246_p2();
    void thread_mul_1_i_cast_fu_402_p1();
    void thread_mul_3_i_cast_fu_438_p1();
    void thread_mul_cast_fu_376_p1();
    void thread_mul_i_cast_43_fu_434_p1();
    void thread_mul_i_cast_fu_388_p1();
    void thread_o_filOut_fu_522_p3();
    void thread_out_0_filOut();
    void thread_out_0_filOut_ap_vld();
    void thread_out_0_peakAmp();
    void thread_out_0_peakAmp_ap_vld();
    void thread_out_0_peakOut();
    void thread_out_0_peakOut_ap_vld();
    void thread_p_acc_i_fu_495_p3();
    void thread_p_neg_i_fu_275_p2();
    void thread_p_shl1_i_cast_fu_414_p1();
    void thread_p_shl8_i_cast_fu_315_p1();
    void thread_p_shl8_i_fu_307_p3();
    void thread_p_shl9_i_cast_fu_327_p1();
    void thread_p_shl9_i_fu_319_p3();
    void thread_pro_1_2_i_fu_418_p2();
    void thread_pro_1_3_i_fu_331_p2();
    void thread_pro_1_i_fu_648_p0();
    void thread_pro_fu_287_p2();
    void thread_tmp2_cast_fu_447_p1();
    void thread_tmp2_fu_441_p2();
    void thread_tmp3_cast_fu_467_p1();
    void thread_tmp3_fu_461_p2();
    void thread_tmp4_cast_fu_457_p1();
    void thread_tmp4_fu_451_p2();
    void thread_tmpPeak_2_fu_615_p3();
    void thread_tmpPeak_fu_587_p3();
    void thread_tmp_11_fu_392_p4();
    void thread_tmp_12_fu_424_p4();
    void thread_tmp_13_fu_303_p1();
    void thread_tmp_14_fu_487_p3();
    void thread_tmp_15_fu_503_p1();
    void thread_tmp_15_i_fu_379_p4();
    void thread_tmp_17_fu_561_p4();
    void thread_tmp_18_fu_595_p1();
    void thread_tmp_19_fu_599_p4();
    void thread_tmp_19_i_fu_538_p2();
    void thread_tmp_1_fu_187_p3();
    void thread_tmp_20_i_fu_548_p2();
    void thread_tmp_2_fu_167_p1();
    void thread_tmp_3_fu_406_p3();
    void thread_tmp_6_fu_471_p1();
    void thread_tmp_6_i_cast_fu_233_p1();
    void thread_tmp_7_fu_269_p2();
    void thread_tmp_8_fu_577_p4();
    void thread_tmp_8_i_cast_fu_242_p1();
    void thread_tmp_8_i_fu_236_p2();
    void thread_tmp_9_fu_281_p2();
    void thread_tmp_fu_171_p4();
    void thread_uncorrectedADC_fu_219_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
