// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "TPG.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic TPG::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic TPG::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> TPG::ap_ST_fsm_state1 = "1";
const sc_lv<5> TPG::ap_ST_fsm_state2 = "10";
const sc_lv<5> TPG::ap_ST_fsm_state3 = "100";
const sc_lv<5> TPG::ap_ST_fsm_state4 = "1000";
const sc_lv<5> TPG::ap_ST_fsm_state5 = "10000";
const sc_lv<32> TPG::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> TPG::ap_const_lv1_1 = "1";
const sc_lv<32> TPG::ap_const_lv32_1 = "1";
const sc_lv<32> TPG::ap_const_lv32_2 = "10";
const sc_lv<32> TPG::ap_const_lv32_3 = "11";
const sc_lv<32> TPG::ap_const_lv32_4 = "100";
const sc_lv<32> TPG::ap_const_lv32_10 = "10000";
const sc_lv<32> TPG::ap_const_lv32_17 = "10111";
const sc_lv<8> TPG::ap_const_lv8_0 = "00000000";
const sc_lv<24> TPG::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<32> TPG::ap_const_lv32_C = "1100";
const sc_lv<32> TPG::ap_const_lv32_F = "1111";
const sc_lv<5> TPG::ap_const_lv5_2 = "10";
const sc_lv<32> TPG::ap_const_lv32_5 = "101";
const sc_lv<32> TPG::ap_const_lv32_6 = "110";
const sc_lv<32> TPG::ap_const_lv32_1F = "11111";
const sc_lv<5> TPG::ap_const_lv5_0 = "00000";
const sc_lv<3> TPG::ap_const_lv3_0 = "000";
const sc_lv<32> TPG::ap_const_lv32_18 = "11000";
const sc_lv<32> TPG::ap_const_lv32_14 = "10100";
const sc_lv<32> TPG::ap_const_lv32_1A = "11010";
const sc_lv<32> TPG::ap_const_lv32_1C = "11100";
const sc_lv<28> TPG::ap_const_lv28_0 = "0000000000000000000000000000";
const sc_lv<32> TPG::ap_const_lv32_12 = "10010";
const sc_lv<32> TPG::ap_const_lv32_1B = "11011";
const sc_lv<10> TPG::ap_const_lv10_0 = "0000000000";
const sc_lv<18> TPG::ap_const_lv18_3FFFF = "111111111111111111";
const sc_lv<32> TPG::ap_const_lv32_11 = "10001";
const sc_lv<6> TPG::ap_const_lv6_0 = "000000";
const sc_lv<16> TPG::ap_const_lv16_3FF = "1111111111";
const sc_lv<32> TPG::ap_const_lv32_A = "1010";
const sc_lv<10> TPG::ap_const_lv10_3FF = "1111111111";
const sc_lv<32> TPG::ap_const_lv32_FFFFFFDD = "11111111111111111111111111011101";

TPG::TPG(sc_module_name name) : sc_module(name), mVcdFile(0) {
    TPG_am_submul_12nbkb_U1 = new TPG_am_submul_12nbkb<1,1,12,12,8,21>("TPG_am_submul_12nbkb_U1");
    TPG_am_submul_12nbkb_U1->din0(grp_fu_640_p0);
    TPG_am_submul_12nbkb_U1->din1(grp_fu_640_p1);
    TPG_am_submul_12nbkb_U1->din2(grp_fu_640_p2);
    TPG_am_submul_12nbkb_U1->dout(grp_fu_640_p3);
    TPG_mul_mul_7s_21cud_U2 = new TPG_mul_mul_7s_21cud<1,1,7,21,32>("TPG_mul_mul_7s_21cud_U2");
    TPG_mul_mul_7s_21cud_U2->din0(pro_1_i_fu_648_p0);
    TPG_mul_mul_7s_21cud_U2->din1(reg_shift_reg_0_2);
    TPG_mul_mul_7s_21cud_U2->dout(pro_1_i_fu_648_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_acc_1_3_i_cast_fu_481_p2);
    sensitive << ( tmp3_fu_461_p2 );
    sensitive << ( tmp_6_fu_471_p1 );

    SC_METHOD(thread_acc_1_3_i_fu_475_p2);
    sensitive << ( tmp2_cast_fu_447_p1 );
    sensitive << ( tmp3_cast_fu_467_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_base_fu_195_p1);
    sensitive << ( tmp_1_fu_187_p3 );

    SC_METHOD(thread_extLd9_fu_259_p1);
    sensitive << ( reg_shift_reg_0_2 );

    SC_METHOD(thread_extLd_cast_fu_361_p1);
    sensitive << ( reg_shift_reg_0_0 );

    SC_METHOD(thread_grp_fu_640_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fu_640_p00 );

    SC_METHOD(thread_grp_fu_640_p00);
    sensitive << ( uncorrectedADC_fu_219_p1 );

    SC_METHOD(thread_grp_fu_640_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fu_640_p10 );

    SC_METHOD(thread_grp_fu_640_p10);
    sensitive << ( base_reg_654 );

    SC_METHOD(thread_grp_fu_640_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fu_640_p20 );

    SC_METHOD(thread_grp_fu_640_p20);
    sensitive << ( mult_reg_664 );

    SC_METHOD(thread_icmp1_fu_517_p2);
    sensitive << ( tmp_16_reg_699 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_icmp2_fu_571_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_17_fu_561_p4 );

    SC_METHOD(thread_icmp3_fu_609_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_19_fu_599_p4 );

    SC_METHOD(thread_icmp_fu_181_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_fu_171_p4 );

    SC_METHOD(thread_linearizerOutput_fu_246_p2);
    sensitive << ( prod_reg_669 );
    sensitive << ( tmp_8_i_cast_fu_242_p1 );

    SC_METHOD(thread_mul_1_i_cast_fu_402_p1);
    sensitive << ( tmp_11_fu_392_p4 );

    SC_METHOD(thread_mul_3_i_cast_fu_438_p1);
    sensitive << ( tmp_5_reg_689 );

    SC_METHOD(thread_mul_cast_fu_376_p1);
    sensitive << ( tmp_13_i_reg_679 );

    SC_METHOD(thread_mul_i_cast_43_fu_434_p1);
    sensitive << ( tmp_12_fu_424_p4 );

    SC_METHOD(thread_mul_i_cast_fu_388_p1);
    sensitive << ( tmp_15_i_fu_379_p4 );

    SC_METHOD(thread_o_filOut_fu_522_p3);
    sensitive << ( tmp_15_reg_694 );
    sensitive << ( icmp1_fu_517_p2 );

    SC_METHOD(thread_out_0_filOut);
    sensitive << ( o_filOut_fu_522_p3 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_out_0_filOut_ap_vld);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_out_0_peakAmp);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmpPeak_2_fu_615_p3 );

    SC_METHOD(thread_out_0_peakAmp_ap_vld);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_out_0_peakOut);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_19_i_fu_538_p2 );
    sensitive << ( tmp_20_i_fu_548_p2 );

    SC_METHOD(thread_out_0_peakOut_ap_vld);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_p_acc_i_fu_495_p3);
    sensitive << ( tmp_14_fu_487_p3 );
    sensitive << ( acc_1_3_i_cast_fu_481_p2 );

    SC_METHOD(thread_p_neg_i_fu_275_p2);
    sensitive << ( tmp_7_fu_269_p2 );

    SC_METHOD(thread_p_shl1_i_cast_fu_414_p1);
    sensitive << ( tmp_3_fu_406_p3 );

    SC_METHOD(thread_p_shl8_i_cast_fu_315_p1);
    sensitive << ( p_shl8_i_fu_307_p3 );

    SC_METHOD(thread_p_shl8_i_fu_307_p3);
    sensitive << ( tmp_13_fu_303_p1 );

    SC_METHOD(thread_p_shl9_i_cast_fu_327_p1);
    sensitive << ( p_shl9_i_fu_319_p3 );

    SC_METHOD(thread_p_shl9_i_fu_319_p3);
    sensitive << ( tmp_13_fu_303_p1 );

    SC_METHOD(thread_pro_1_2_i_fu_418_p2);
    sensitive << ( p_shl1_i_cast_fu_414_p1 );
    sensitive << ( extLd_cast_fu_361_p1 );

    SC_METHOD(thread_pro_1_3_i_fu_331_p2);
    sensitive << ( p_shl8_i_cast_fu_315_p1 );
    sensitive << ( p_shl9_i_cast_fu_327_p1 );

    SC_METHOD(thread_pro_1_i_fu_648_p0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_pro_fu_287_p2);
    sensitive << ( p_neg_i_fu_275_p2 );
    sensitive << ( tmp_9_fu_281_p2 );

    SC_METHOD(thread_tmp2_cast_fu_447_p1);
    sensitive << ( tmp2_fu_441_p2 );

    SC_METHOD(thread_tmp2_fu_441_p2);
    sensitive << ( mul_i_cast_43_fu_434_p1 );
    sensitive << ( mul_1_i_cast_fu_402_p1 );

    SC_METHOD(thread_tmp3_cast_fu_467_p1);
    sensitive << ( tmp3_fu_461_p2 );

    SC_METHOD(thread_tmp3_fu_461_p2);
    sensitive << ( mul_cast_fu_376_p1 );
    sensitive << ( tmp4_cast_fu_457_p1 );

    SC_METHOD(thread_tmp4_cast_fu_457_p1);
    sensitive << ( tmp4_fu_451_p2 );

    SC_METHOD(thread_tmp4_fu_451_p2);
    sensitive << ( mul_3_i_cast_fu_438_p1 );
    sensitive << ( mul_i_cast_fu_388_p1 );

    SC_METHOD(thread_tmpPeak_2_fu_615_p3);
    sensitive << ( icmp3_fu_609_p2 );
    sensitive << ( tmp_18_fu_595_p1 );

    SC_METHOD(thread_tmpPeak_fu_587_p3);
    sensitive << ( icmp2_fu_571_p2 );
    sensitive << ( tmp_8_fu_577_p4 );

    SC_METHOD(thread_tmp_11_fu_392_p4);
    sensitive << ( reg_shift_reg_0_1 );

    SC_METHOD(thread_tmp_12_fu_424_p4);
    sensitive << ( pro_1_2_i_fu_418_p2 );

    SC_METHOD(thread_tmp_13_fu_303_p1);
    sensitive << ( linearizerOutput_fu_246_p2 );

    SC_METHOD(thread_tmp_14_fu_487_p3);
    sensitive << ( acc_1_3_i_fu_475_p2 );

    SC_METHOD(thread_tmp_15_fu_503_p1);
    sensitive << ( p_acc_i_fu_495_p3 );

    SC_METHOD(thread_tmp_15_i_fu_379_p4);
    sensitive << ( pro_1_i_reg_684 );

    SC_METHOD(thread_tmp_17_fu_561_p4);
    sensitive << ( reg_peak_reg_0_0 );

    SC_METHOD(thread_tmp_18_fu_595_p1);
    sensitive << ( tmpPeak_fu_587_p3 );

    SC_METHOD(thread_tmp_19_fu_599_p4);
    sensitive << ( tmpPeak_fu_587_p3 );

    SC_METHOD(thread_tmp_19_i_fu_538_p2);
    sensitive << ( reg_peak_reg_0_0 );
    sensitive << ( o_filOut_fu_522_p3 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_1_fu_187_p3);
    sensitive << ( icmp_fu_181_p2 );
    sensitive << ( tmp_2_fu_167_p1 );

    SC_METHOD(thread_tmp_20_i_fu_548_p2);
    sensitive << ( reg_peak_reg_0_0 );
    sensitive << ( reg_peak_reg_0_1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_2_fu_167_p1);
    sensitive << ( in_0_lincoeff );

    SC_METHOD(thread_tmp_3_fu_406_p3);
    sensitive << ( reg_shift_reg_0_0 );

    SC_METHOD(thread_tmp_6_fu_471_p1);
    sensitive << ( tmp2_fu_441_p2 );

    SC_METHOD(thread_tmp_6_i_cast_fu_233_p1);
    sensitive << ( shiftlin_reg_659 );

    SC_METHOD(thread_tmp_7_fu_269_p2);
    sensitive << ( reg_shift_reg_0_3 );

    SC_METHOD(thread_tmp_8_fu_577_p4);
    sensitive << ( reg_peak_reg_0_0 );

    SC_METHOD(thread_tmp_8_i_cast_fu_242_p1);
    sensitive << ( tmp_8_i_fu_236_p2 );

    SC_METHOD(thread_tmp_8_i_fu_236_p2);
    sensitive << ( tmp_6_i_cast_fu_233_p1 );

    SC_METHOD(thread_tmp_9_fu_281_p2);
    sensitive << ( reg_shift_reg_0_3 );

    SC_METHOD(thread_tmp_fu_171_p4);
    sensitive << ( in_0_lincoeff );

    SC_METHOD(thread_uncorrectedADC_fu_219_p1);
    sensitive << ( in_0_data_input );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00001";
    reg_shift_reg_0_3 = "00000000000000000000000000000000";
    reg_shift_reg_0_2 = "000000000000000000000";
    reg_shift_reg_0_1 = "000000000000000000000";
    reg_shift_reg_0_0 = "000000000000000000000";
    reg_peak_reg_0_0 = "000000000000000000";
    reg_peak_reg_0_1 = "000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "TPG_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_0_data_input, "(port)in_0_data_input");
    sc_trace(mVcdFile, in_0_lincoeff, "(port)in_0_lincoeff");
    sc_trace(mVcdFile, out_0_filOut, "(port)out_0_filOut");
    sc_trace(mVcdFile, out_0_filOut_ap_vld, "(port)out_0_filOut_ap_vld");
    sc_trace(mVcdFile, out_0_peakOut, "(port)out_0_peakOut");
    sc_trace(mVcdFile, out_0_peakOut_ap_vld, "(port)out_0_peakOut_ap_vld");
    sc_trace(mVcdFile, out_0_peakAmp, "(port)out_0_peakAmp");
    sc_trace(mVcdFile, out_0_peakAmp_ap_vld, "(port)out_0_peakAmp_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_shift_reg_0_3, "reg_shift_reg_0_3");
    sc_trace(mVcdFile, reg_shift_reg_0_2, "reg_shift_reg_0_2");
    sc_trace(mVcdFile, reg_shift_reg_0_1, "reg_shift_reg_0_1");
    sc_trace(mVcdFile, reg_shift_reg_0_0, "reg_shift_reg_0_0");
    sc_trace(mVcdFile, reg_peak_reg_0_0, "reg_peak_reg_0_0");
    sc_trace(mVcdFile, reg_peak_reg_0_1, "reg_peak_reg_0_1");
    sc_trace(mVcdFile, base_fu_195_p1, "base_fu_195_p1");
    sc_trace(mVcdFile, base_reg_654, "base_reg_654");
    sc_trace(mVcdFile, shiftlin_reg_659, "shiftlin_reg_659");
    sc_trace(mVcdFile, mult_reg_664, "mult_reg_664");
    sc_trace(mVcdFile, grp_fu_640_p3, "grp_fu_640_p3");
    sc_trace(mVcdFile, prod_reg_669, "prod_reg_669");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, linearizerOutput_fu_246_p2, "linearizerOutput_fu_246_p2");
    sc_trace(mVcdFile, linearizerOutput_reg_674, "linearizerOutput_reg_674");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_13_i_reg_679, "tmp_13_i_reg_679");
    sc_trace(mVcdFile, pro_1_i_fu_648_p2, "pro_1_i_fu_648_p2");
    sc_trace(mVcdFile, pro_1_i_reg_684, "pro_1_i_reg_684");
    sc_trace(mVcdFile, tmp_5_reg_689, "tmp_5_reg_689");
    sc_trace(mVcdFile, tmp_15_fu_503_p1, "tmp_15_fu_503_p1");
    sc_trace(mVcdFile, tmp_15_reg_694, "tmp_15_reg_694");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_16_reg_699, "tmp_16_reg_699");
    sc_trace(mVcdFile, extLd9_fu_259_p1, "extLd9_fu_259_p1");
    sc_trace(mVcdFile, o_filOut_fu_522_p3, "o_filOut_fu_522_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_fu_171_p4, "tmp_fu_171_p4");
    sc_trace(mVcdFile, icmp_fu_181_p2, "icmp_fu_181_p2");
    sc_trace(mVcdFile, tmp_2_fu_167_p1, "tmp_2_fu_167_p1");
    sc_trace(mVcdFile, tmp_1_fu_187_p3, "tmp_1_fu_187_p3");
    sc_trace(mVcdFile, uncorrectedADC_fu_219_p1, "uncorrectedADC_fu_219_p1");
    sc_trace(mVcdFile, tmp_6_i_cast_fu_233_p1, "tmp_6_i_cast_fu_233_p1");
    sc_trace(mVcdFile, tmp_8_i_fu_236_p2, "tmp_8_i_fu_236_p2");
    sc_trace(mVcdFile, tmp_8_i_cast_fu_242_p1, "tmp_8_i_cast_fu_242_p1");
    sc_trace(mVcdFile, tmp_7_fu_269_p2, "tmp_7_fu_269_p2");
    sc_trace(mVcdFile, p_neg_i_fu_275_p2, "p_neg_i_fu_275_p2");
    sc_trace(mVcdFile, tmp_9_fu_281_p2, "tmp_9_fu_281_p2");
    sc_trace(mVcdFile, pro_fu_287_p2, "pro_fu_287_p2");
    sc_trace(mVcdFile, tmp_13_fu_303_p1, "tmp_13_fu_303_p1");
    sc_trace(mVcdFile, p_shl8_i_fu_307_p3, "p_shl8_i_fu_307_p3");
    sc_trace(mVcdFile, p_shl9_i_fu_319_p3, "p_shl9_i_fu_319_p3");
    sc_trace(mVcdFile, p_shl8_i_cast_fu_315_p1, "p_shl8_i_cast_fu_315_p1");
    sc_trace(mVcdFile, p_shl9_i_cast_fu_327_p1, "p_shl9_i_cast_fu_327_p1");
    sc_trace(mVcdFile, pro_1_3_i_fu_331_p2, "pro_1_3_i_fu_331_p2");
    sc_trace(mVcdFile, tmp_15_i_fu_379_p4, "tmp_15_i_fu_379_p4");
    sc_trace(mVcdFile, tmp_11_fu_392_p4, "tmp_11_fu_392_p4");
    sc_trace(mVcdFile, tmp_3_fu_406_p3, "tmp_3_fu_406_p3");
    sc_trace(mVcdFile, p_shl1_i_cast_fu_414_p1, "p_shl1_i_cast_fu_414_p1");
    sc_trace(mVcdFile, extLd_cast_fu_361_p1, "extLd_cast_fu_361_p1");
    sc_trace(mVcdFile, pro_1_2_i_fu_418_p2, "pro_1_2_i_fu_418_p2");
    sc_trace(mVcdFile, tmp_12_fu_424_p4, "tmp_12_fu_424_p4");
    sc_trace(mVcdFile, mul_i_cast_43_fu_434_p1, "mul_i_cast_43_fu_434_p1");
    sc_trace(mVcdFile, mul_1_i_cast_fu_402_p1, "mul_1_i_cast_fu_402_p1");
    sc_trace(mVcdFile, tmp2_fu_441_p2, "tmp2_fu_441_p2");
    sc_trace(mVcdFile, mul_3_i_cast_fu_438_p1, "mul_3_i_cast_fu_438_p1");
    sc_trace(mVcdFile, mul_i_cast_fu_388_p1, "mul_i_cast_fu_388_p1");
    sc_trace(mVcdFile, tmp4_fu_451_p2, "tmp4_fu_451_p2");
    sc_trace(mVcdFile, mul_cast_fu_376_p1, "mul_cast_fu_376_p1");
    sc_trace(mVcdFile, tmp4_cast_fu_457_p1, "tmp4_cast_fu_457_p1");
    sc_trace(mVcdFile, tmp3_fu_461_p2, "tmp3_fu_461_p2");
    sc_trace(mVcdFile, tmp2_cast_fu_447_p1, "tmp2_cast_fu_447_p1");
    sc_trace(mVcdFile, tmp3_cast_fu_467_p1, "tmp3_cast_fu_467_p1");
    sc_trace(mVcdFile, tmp_6_fu_471_p1, "tmp_6_fu_471_p1");
    sc_trace(mVcdFile, acc_1_3_i_fu_475_p2, "acc_1_3_i_fu_475_p2");
    sc_trace(mVcdFile, tmp_14_fu_487_p3, "tmp_14_fu_487_p3");
    sc_trace(mVcdFile, acc_1_3_i_cast_fu_481_p2, "acc_1_3_i_cast_fu_481_p2");
    sc_trace(mVcdFile, p_acc_i_fu_495_p3, "p_acc_i_fu_495_p3");
    sc_trace(mVcdFile, icmp1_fu_517_p2, "icmp1_fu_517_p2");
    sc_trace(mVcdFile, tmp_19_i_fu_538_p2, "tmp_19_i_fu_538_p2");
    sc_trace(mVcdFile, tmp_20_i_fu_548_p2, "tmp_20_i_fu_548_p2");
    sc_trace(mVcdFile, tmp_17_fu_561_p4, "tmp_17_fu_561_p4");
    sc_trace(mVcdFile, icmp2_fu_571_p2, "icmp2_fu_571_p2");
    sc_trace(mVcdFile, tmp_8_fu_577_p4, "tmp_8_fu_577_p4");
    sc_trace(mVcdFile, tmpPeak_fu_587_p3, "tmpPeak_fu_587_p3");
    sc_trace(mVcdFile, tmp_19_fu_599_p4, "tmp_19_fu_599_p4");
    sc_trace(mVcdFile, icmp3_fu_609_p2, "icmp3_fu_609_p2");
    sc_trace(mVcdFile, tmp_18_fu_595_p1, "tmp_18_fu_595_p1");
    sc_trace(mVcdFile, tmpPeak_2_fu_615_p3, "tmpPeak_2_fu_615_p3");
    sc_trace(mVcdFile, grp_fu_640_p0, "grp_fu_640_p0");
    sc_trace(mVcdFile, grp_fu_640_p1, "grp_fu_640_p1");
    sc_trace(mVcdFile, grp_fu_640_p2, "grp_fu_640_p2");
    sc_trace(mVcdFile, pro_1_i_fu_648_p0, "pro_1_i_fu_648_p0");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_640_p00, "grp_fu_640_p00");
    sc_trace(mVcdFile, grp_fu_640_p10, "grp_fu_640_p10");
    sc_trace(mVcdFile, grp_fu_640_p20, "grp_fu_640_p20");
#endif

    }
    mHdltvinHandle.open("TPG.hdltvin.dat");
    mHdltvoutHandle.open("TPG.hdltvout.dat");
}

TPG::~TPG() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete TPG_am_submul_12nbkb_U1;
    delete TPG_mul_mul_7s_21cud_U2;
}

void TPG::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        base_reg_654 = base_fu_195_p1.read();
        mult_reg_664 = tmp_1_fu_187_p3.read().range(23, 16);
        shiftlin_reg_659 = tmp_1_fu_187_p3.read().range(15, 12);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        linearizerOutput_reg_674 = linearizerOutput_fu_246_p2.read();
        pro_1_i_reg_684 = pro_1_i_fu_648_p2.read();
        reg_shift_reg_0_3 = extLd9_fu_259_p1.read();
        tmp_13_i_reg_679 = pro_fu_287_p2.read().range(31, 6);
        tmp_5_reg_689 = pro_1_3_i_fu_331_p2.read().range(24, 6);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        prod_reg_669 = grp_fu_640_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        reg_peak_reg_0_0 = o_filOut_fu_522_p3.read();
        reg_peak_reg_0_1 = reg_peak_reg_0_0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        reg_shift_reg_0_0 = linearizerOutput_reg_674.read();
        reg_shift_reg_0_1 = reg_shift_reg_0_0.read();
        reg_shift_reg_0_2 = reg_shift_reg_0_1.read();
        tmp_15_reg_694 = tmp_15_fu_503_p1.read();
        tmp_16_reg_699 = p_acc_i_fu_495_p3.read().range(27, 18);
    }
}

void TPG::thread_acc_1_3_i_cast_fu_481_p2() {
    acc_1_3_i_cast_fu_481_p2 = (!tmp3_fu_461_p2.read().is_01() || !tmp_6_fu_471_p1.read().is_01())? sc_lv<28>(): (sc_biguint<28>(tmp3_fu_461_p2.read()) + sc_bigint<28>(tmp_6_fu_471_p1.read()));
}

void TPG::thread_acc_1_3_i_fu_475_p2() {
    acc_1_3_i_fu_475_p2 = (!tmp2_cast_fu_447_p1.read().is_01() || !tmp3_cast_fu_467_p1.read().is_01())? sc_lv<29>(): (sc_bigint<29>(tmp2_cast_fu_447_p1.read()) + sc_bigint<29>(tmp3_cast_fu_467_p1.read()));
}

void TPG::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void TPG::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void TPG::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void TPG::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void TPG::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void TPG::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void TPG::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void TPG::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void TPG::thread_base_fu_195_p1() {
    base_fu_195_p1 = tmp_1_fu_187_p3.read().range(12-1, 0);
}

void TPG::thread_extLd9_fu_259_p1() {
    extLd9_fu_259_p1 = esl_sext<32,21>(reg_shift_reg_0_2.read());
}

void TPG::thread_extLd_cast_fu_361_p1() {
    extLd_cast_fu_361_p1 = esl_sext<27,21>(reg_shift_reg_0_0.read());
}

void TPG::thread_grp_fu_640_p0() {
    grp_fu_640_p0 =  (sc_lv<12>) (grp_fu_640_p00.read());
}

void TPG::thread_grp_fu_640_p00() {
    grp_fu_640_p00 = esl_zext<13,12>(uncorrectedADC_fu_219_p1.read());
}

void TPG::thread_grp_fu_640_p1() {
    grp_fu_640_p1 =  (sc_lv<12>) (grp_fu_640_p10.read());
}

void TPG::thread_grp_fu_640_p10() {
    grp_fu_640_p10 = esl_zext<13,12>(base_reg_654.read());
}

void TPG::thread_grp_fu_640_p2() {
    grp_fu_640_p2 =  (sc_lv<8>) (grp_fu_640_p20.read());
}

void TPG::thread_grp_fu_640_p20() {
    grp_fu_640_p20 = esl_zext<21,8>(mult_reg_664.read());
}

void TPG::thread_icmp1_fu_517_p2() {
    icmp1_fu_517_p2 = (!tmp_16_reg_699.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_16_reg_699.read() != ap_const_lv10_0);
}

void TPG::thread_icmp2_fu_571_p2() {
    icmp2_fu_571_p2 = (!tmp_17_fu_561_p4.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_17_fu_561_p4.read() != ap_const_lv6_0);
}

void TPG::thread_icmp3_fu_609_p2() {
    icmp3_fu_609_p2 = (!tmp_19_fu_599_p4.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_19_fu_599_p4.read() != ap_const_lv6_0);
}

void TPG::thread_icmp_fu_181_p2() {
    icmp_fu_181_p2 = (!tmp_fu_171_p4.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_171_p4.read() == ap_const_lv8_0);
}

void TPG::thread_linearizerOutput_fu_246_p2() {
    linearizerOutput_fu_246_p2 = (!prod_reg_669.read().is_01() || !tmp_8_i_cast_fu_242_p1.read().is_01())? sc_lv<21>(): sc_bigint<21>(prod_reg_669.read()) >> (unsigned short)tmp_8_i_cast_fu_242_p1.read().to_uint();
}

void TPG::thread_mul_1_i_cast_fu_402_p1() {
    mul_1_i_cast_fu_402_p1 = esl_sext<27,19>(tmp_11_fu_392_p4.read());
}

void TPG::thread_mul_3_i_cast_fu_438_p1() {
    mul_3_i_cast_fu_438_p1 = esl_sext<27,19>(tmp_5_reg_689.read());
}

void TPG::thread_mul_cast_fu_376_p1() {
    mul_cast_fu_376_p1 = esl_sext<28,26>(tmp_13_i_reg_679.read());
}

void TPG::thread_mul_i_cast_43_fu_434_p1() {
    mul_i_cast_43_fu_434_p1 = esl_sext<27,21>(tmp_12_fu_424_p4.read());
}

void TPG::thread_mul_i_cast_fu_388_p1() {
    mul_i_cast_fu_388_p1 = esl_sext<27,26>(tmp_15_i_fu_379_p4.read());
}

void TPG::thread_o_filOut_fu_522_p3() {
    o_filOut_fu_522_p3 = (!icmp1_fu_517_p2.read()[0].is_01())? sc_lv<18>(): ((icmp1_fu_517_p2.read()[0].to_bool())? ap_const_lv18_3FFFF: tmp_15_reg_694.read());
}

void TPG::thread_out_0_filOut() {
    out_0_filOut = esl_zext<32,18>(o_filOut_fu_522_p3.read());
}

void TPG::thread_out_0_filOut_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        out_0_filOut_ap_vld = ap_const_logic_1;
    } else {
        out_0_filOut_ap_vld = ap_const_logic_0;
    }
}

void TPG::thread_out_0_peakAmp() {
    out_0_peakAmp = esl_zext<16,10>(tmpPeak_2_fu_615_p3.read());
}

void TPG::thread_out_0_peakAmp_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        out_0_peakAmp_ap_vld = ap_const_logic_1;
    } else {
        out_0_peakAmp_ap_vld = ap_const_logic_0;
    }
}

void TPG::thread_out_0_peakOut() {
    out_0_peakOut =  (sc_logic) ((tmp_19_i_fu_538_p2.read() & tmp_20_i_fu_548_p2.read()))[0];
}

void TPG::thread_out_0_peakOut_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        out_0_peakOut_ap_vld = ap_const_logic_1;
    } else {
        out_0_peakOut_ap_vld = ap_const_logic_0;
    }
}

void TPG::thread_p_acc_i_fu_495_p3() {
    p_acc_i_fu_495_p3 = (!tmp_14_fu_487_p3.read()[0].is_01())? sc_lv<28>(): ((tmp_14_fu_487_p3.read()[0].to_bool())? ap_const_lv28_0: acc_1_3_i_cast_fu_481_p2.read());
}

void TPG::thread_p_neg_i_fu_275_p2() {
    p_neg_i_fu_275_p2 = (!ap_const_lv32_0.is_01() || !tmp_7_fu_269_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(tmp_7_fu_269_p2.read()));
}

void TPG::thread_p_shl1_i_cast_fu_414_p1() {
    p_shl1_i_cast_fu_414_p1 = esl_sext<27,26>(tmp_3_fu_406_p3.read());
}

void TPG::thread_p_shl8_i_cast_fu_315_p1() {
    p_shl8_i_cast_fu_315_p1 = esl_sext<25,24>(p_shl8_i_fu_307_p3.read());
}

void TPG::thread_p_shl8_i_fu_307_p3() {
    p_shl8_i_fu_307_p3 = esl_concat<19,5>(tmp_13_fu_303_p1.read(), ap_const_lv5_0);
}

void TPG::thread_p_shl9_i_cast_fu_327_p1() {
    p_shl9_i_cast_fu_327_p1 = esl_sext<25,22>(p_shl9_i_fu_319_p3.read());
}

void TPG::thread_p_shl9_i_fu_319_p3() {
    p_shl9_i_fu_319_p3 = esl_concat<19,3>(tmp_13_fu_303_p1.read(), ap_const_lv3_0);
}

void TPG::thread_pro_1_2_i_fu_418_p2() {
    pro_1_2_i_fu_418_p2 = (!p_shl1_i_cast_fu_414_p1.read().is_01() || !extLd_cast_fu_361_p1.read().is_01())? sc_lv<27>(): (sc_bigint<27>(p_shl1_i_cast_fu_414_p1.read()) - sc_bigint<27>(extLd_cast_fu_361_p1.read()));
}

void TPG::thread_pro_1_3_i_fu_331_p2() {
    pro_1_3_i_fu_331_p2 = (!p_shl8_i_cast_fu_315_p1.read().is_01() || !p_shl9_i_cast_fu_327_p1.read().is_01())? sc_lv<25>(): (sc_bigint<25>(p_shl8_i_cast_fu_315_p1.read()) - sc_bigint<25>(p_shl9_i_cast_fu_327_p1.read()));
}

void TPG::thread_pro_1_i_fu_648_p0() {
    pro_1_i_fu_648_p0 =  (sc_lv<7>) (ap_const_lv32_FFFFFFDD);
}

void TPG::thread_pro_fu_287_p2() {
    pro_fu_287_p2 = (!p_neg_i_fu_275_p2.read().is_01() || !tmp_9_fu_281_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_neg_i_fu_275_p2.read()) - sc_biguint<32>(tmp_9_fu_281_p2.read()));
}

void TPG::thread_tmp2_cast_fu_447_p1() {
    tmp2_cast_fu_447_p1 = esl_sext<29,27>(tmp2_fu_441_p2.read());
}

void TPG::thread_tmp2_fu_441_p2() {
    tmp2_fu_441_p2 = (!mul_i_cast_43_fu_434_p1.read().is_01() || !mul_1_i_cast_fu_402_p1.read().is_01())? sc_lv<27>(): (sc_bigint<27>(mul_i_cast_43_fu_434_p1.read()) + sc_bigint<27>(mul_1_i_cast_fu_402_p1.read()));
}

void TPG::thread_tmp3_cast_fu_467_p1() {
    tmp3_cast_fu_467_p1 = esl_sext<29,28>(tmp3_fu_461_p2.read());
}

void TPG::thread_tmp3_fu_461_p2() {
    tmp3_fu_461_p2 = (!mul_cast_fu_376_p1.read().is_01() || !tmp4_cast_fu_457_p1.read().is_01())? sc_lv<28>(): (sc_bigint<28>(mul_cast_fu_376_p1.read()) + sc_bigint<28>(tmp4_cast_fu_457_p1.read()));
}

void TPG::thread_tmp4_cast_fu_457_p1() {
    tmp4_cast_fu_457_p1 = esl_sext<28,27>(tmp4_fu_451_p2.read());
}

void TPG::thread_tmp4_fu_451_p2() {
    tmp4_fu_451_p2 = (!mul_3_i_cast_fu_438_p1.read().is_01() || !mul_i_cast_fu_388_p1.read().is_01())? sc_lv<27>(): (sc_bigint<27>(mul_3_i_cast_fu_438_p1.read()) + sc_bigint<27>(mul_i_cast_fu_388_p1.read()));
}

void TPG::thread_tmpPeak_2_fu_615_p3() {
    tmpPeak_2_fu_615_p3 = (!icmp3_fu_609_p2.read()[0].is_01())? sc_lv<10>(): ((icmp3_fu_609_p2.read()[0].to_bool())? ap_const_lv10_3FF: tmp_18_fu_595_p1.read());
}

void TPG::thread_tmpPeak_fu_587_p3() {
    tmpPeak_fu_587_p3 = (!icmp2_fu_571_p2.read()[0].is_01())? sc_lv<16>(): ((icmp2_fu_571_p2.read()[0].to_bool())? ap_const_lv16_3FF: tmp_8_fu_577_p4.read());
}

void TPG::thread_tmp_11_fu_392_p4() {
    tmp_11_fu_392_p4 = reg_shift_reg_0_1.read().range(20, 2);
}

void TPG::thread_tmp_12_fu_424_p4() {
    tmp_12_fu_424_p4 = pro_1_2_i_fu_418_p2.read().range(26, 6);
}

void TPG::thread_tmp_13_fu_303_p1() {
    tmp_13_fu_303_p1 = linearizerOutput_fu_246_p2.read().range(19-1, 0);
}

void TPG::thread_tmp_14_fu_487_p3() {
    tmp_14_fu_487_p3 = acc_1_3_i_fu_475_p2.read().range(28, 28);
}

void TPG::thread_tmp_15_fu_503_p1() {
    tmp_15_fu_503_p1 = p_acc_i_fu_495_p3.read().range(18-1, 0);
}

void TPG::thread_tmp_15_i_fu_379_p4() {
    tmp_15_i_fu_379_p4 = pro_1_i_reg_684.read().range(31, 6);
}

void TPG::thread_tmp_17_fu_561_p4() {
    tmp_17_fu_561_p4 = reg_peak_reg_0_0.read().range(17, 12);
}

void TPG::thread_tmp_18_fu_595_p1() {
    tmp_18_fu_595_p1 = tmpPeak_fu_587_p3.read().range(10-1, 0);
}

void TPG::thread_tmp_19_fu_599_p4() {
    tmp_19_fu_599_p4 = tmpPeak_fu_587_p3.read().range(15, 10);
}

void TPG::thread_tmp_19_i_fu_538_p2() {
    tmp_19_i_fu_538_p2 = (!reg_peak_reg_0_0.read().is_01() || !o_filOut_fu_522_p3.read().is_01())? sc_lv<1>(): (sc_biguint<18>(reg_peak_reg_0_0.read()) > sc_biguint<18>(o_filOut_fu_522_p3.read()));
}

void TPG::thread_tmp_1_fu_187_p3() {
    tmp_1_fu_187_p3 = (!icmp_fu_181_p2.read()[0].is_01())? sc_lv<24>(): ((icmp_fu_181_p2.read()[0].to_bool())? ap_const_lv24_0: tmp_2_fu_167_p1.read());
}

void TPG::thread_tmp_20_i_fu_548_p2() {
    tmp_20_i_fu_548_p2 = (!reg_peak_reg_0_0.read().is_01() || !reg_peak_reg_0_1.read().is_01())? sc_lv<1>(): (sc_biguint<18>(reg_peak_reg_0_0.read()) > sc_biguint<18>(reg_peak_reg_0_1.read()));
}

void TPG::thread_tmp_2_fu_167_p1() {
    tmp_2_fu_167_p1 = in_0_lincoeff.read().range(24-1, 0);
}

void TPG::thread_tmp_3_fu_406_p3() {
    tmp_3_fu_406_p3 = esl_concat<21,5>(reg_shift_reg_0_0.read(), ap_const_lv5_0);
}

void TPG::thread_tmp_6_fu_471_p1() {
    tmp_6_fu_471_p1 = esl_sext<28,27>(tmp2_fu_441_p2.read());
}

void TPG::thread_tmp_6_i_cast_fu_233_p1() {
    tmp_6_i_cast_fu_233_p1 = esl_zext<5,4>(shiftlin_reg_659.read());
}

void TPG::thread_tmp_7_fu_269_p2() {
    tmp_7_fu_269_p2 = (!ap_const_lv32_5.is_01())? sc_lv<32>(): reg_shift_reg_0_3.read() << (unsigned short)ap_const_lv32_5.to_uint();
}

void TPG::thread_tmp_8_fu_577_p4() {
    tmp_8_fu_577_p4 = reg_peak_reg_0_0.read().range(17, 2);
}

void TPG::thread_tmp_8_i_cast_fu_242_p1() {
    tmp_8_i_cast_fu_242_p1 = esl_zext<21,5>(tmp_8_i_fu_236_p2.read());
}

void TPG::thread_tmp_8_i_fu_236_p2() {
    tmp_8_i_fu_236_p2 = (!ap_const_lv5_2.is_01() || !tmp_6_i_cast_fu_233_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_2) + sc_biguint<5>(tmp_6_i_cast_fu_233_p1.read()));
}

void TPG::thread_tmp_9_fu_281_p2() {
    tmp_9_fu_281_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): reg_shift_reg_0_3.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void TPG::thread_tmp_fu_171_p4() {
    tmp_fu_171_p4 = in_0_lincoeff.read().range(23, 16);
}

void TPG::thread_uncorrectedADC_fu_219_p1() {
    uncorrectedADC_fu_219_p1 = in_0_data_input.read().range(12-1, 0);
}

void TPG::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

void TPG::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_0_data_input\" :  \"" << in_0_data_input.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_0_lincoeff\" :  \"" << in_0_lincoeff.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_filOut\" :  \"" << out_0_filOut.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_filOut_ap_vld\" :  \"" << out_0_filOut_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_peakOut\" :  \"" << out_0_peakOut.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_peakOut_ap_vld\" :  \"" << out_0_peakOut_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_peakAmp\" :  \"" << out_0_peakAmp.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_peakAmp_ap_vld\" :  \"" << out_0_peakAmp_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

