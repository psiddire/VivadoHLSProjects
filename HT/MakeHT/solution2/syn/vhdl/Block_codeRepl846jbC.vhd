-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Block_codeRepl846jbC_rom is 
    generic(
             dwidth     : integer := 10; 
             awidth     : integer := 10; 
             mem_size    : integer := 1024
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Block_codeRepl846jbC_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "0000000000", 1 => "0000000010", 2 => "0000000100", 3 => "0000000110", 
    4 => "0000001000", 5 => "0000001001", 6 => "0000001011", 7 => "0000001101", 
    8 => "0000001111", 9 => "0000010001", 10 => "0000010010", 11 => "0000010100", 
    12 => "0000010110", 13 => "0000011000", 14 => "0000011010", 15 => "0000011011", 
    16 => "0000011101", 17 => "0000011111", 18 => "0000100001", 19 => "0000100011", 
    20 => "0000100100", 21 => "0000100110", 22 => "0000101000", 23 => "0000101010", 
    24 => "0000101100", 25 => "0000101101", 26 => "0000101111", 27 => "0000110001", 
    28 => "0000110011", 29 => "0000110101", 30 => "0000110110", 31 => "0000111000", 
    32 => "0000111010", 33 => "0000111100", 34 => "0000111110", 35 => "0000111111", 
    36 => "0001000001", 37 => "0001000011", 38 => "0001000101", 39 => "0001000111", 
    40 => "0001001000", 41 => "0001001010", 42 => "0001001100", 43 => "0001001110", 
    44 => "0001010000", 45 => "0001010001", 46 => "0001010011", 47 => "0001010101", 
    48 => "0001010111", 49 => "0001011001", 50 => "0001011010", 51 => "0001011100", 
    52 => "0001011110", 53 => "0001100000", 54 => "0001100010", 55 => "0001100011", 
    56 => "0001100101", 57 => "0001100111", 58 => "0001101001", 59 => "0001101011", 
    60 => "0001101100", 61 => "0001101110", 62 => "0001110000", 63 => "0001110010", 
    64 => "0001110100", 65 => "0001110101", 66 => "0001110111", 67 => "0001111001", 
    68 => "0001111011", 69 => "0001111101", 70 => "0001111110", 71 => "0010000000", 
    72 => "0010000010", 73 => "0010000100", 74 => "0010000110", 75 => "0010000111", 
    76 => "0010001001", 77 => "0010001011", 78 => "0010001101", 79 => "0010001111", 
    80 => "0010010000", 81 => "0010010010", 82 => "0010010100", 83 => "0010010110", 
    84 => "0010011000", 85 => "0010011001", 86 => "0010011011", 87 => "0010011101", 
    88 => "0010011111", 89 => "0010100001", 90 => "0010100010", 91 => "0010100100", 
    92 => "0010100110", 93 => "0010101000", 94 => "0010101010", 95 => "0010101011", 
    96 => "0010101101", 97 => "0010101111", 98 => "0010110001", 99 => "0010110011", 
    100 => "0010110100", 101 => "0010110110", 102 => "0010111000", 103 => "0010111010", 
    104 => "0010111100", 105 => "0010111101", 106 => "0010111111", 107 => "0011000001", 
    108 => "0011000011", 109 => "0011000101", 110 => "0011000110", 111 => "0011001000", 
    112 => "0011001010", 113 => "0011001100", 114 => "0011001110", 115 => "0011001111", 
    116 => "0011010001", 117 => "0011010011", 118 => "0011010101", 119 => "0011010111", 
    120 => "0011011000", 121 => "0011011010", 122 => "0011011100", 123 => "0011011110", 
    124 => "0011100000", 125 => "0011100001", 126 => "0011100011", 127 => "0011100101", 
    128 => "0011100111", 129 => "0011101001", 130 => "0011101010", 131 => "0011101100", 
    132 => "0011101110", 133 => "0011110000", 134 => "0011110010", 135 => "0011110011", 
    136 => "0011110101", 137 => "0011110111", 138 => "0011111001", 139 => "0011111011", 
    140 => "0011111100", 141 => "0011111110", 142 => "0100000000", 143 => "0100000010", 
    144 => "0100000100", 145 => "0100000101", 146 => "0100000111", 147 => "0100001001", 
    148 => "0100001011", 149 => "0100001101", 150 => "0100001110", 151 => "0100010000", 
    152 => "0100010010", 153 => "0100010100", 154 => "0100010110", 155 => "0100010111", 
    156 => "0100011001", 157 => "0100011011", 158 => "0100011101", 159 => "0100011111", 
    160 => "0100100000", 161 => "0100100010", 162 => "0100100100", 163 => "0100100110", 
    164 => "0100101000", 165 => "0100101001", 166 => "0100101011", 167 => "0100101101", 
    168 => "0100101111", 169 => "0100110001", 170 => "0100110010", 171 => "0100110100", 
    172 => "0100110110", 173 => "0100111000", 174 => "0100111010", 175 => "0100111011", 
    176 => "0100111101", 177 => "0100111111", 178 => "0101000001", 179 => "0101000011", 
    180 => "0101000100", 181 => "0101000110", 182 => "0101001000", 183 => "0101001010", 
    184 => "0101001100", 185 => "0101001101", 186 => "0101001111", 187 => "0101010001", 
    188 => "0101010011", 189 => "0101010101", 190 => "0101010110", 191 => "0101011000", 
    192 => "0101011010", 193 => "0101011100", 194 => "0101011110", 195 => "0101011111", 
    196 => "0101100001", 197 => "0101100011", 198 => "0101100101", 199 => "0101100111", 
    200 => "0101101000", 201 => "0101101010", 202 => "0101101100", 203 => "0101101110", 
    204 => "0101110000", 205 => "0101110001", 206 => "0101110011", 207 => "0101110101", 
    208 => "0101110111", 209 => "0101111001", 210 => "0101111010", 211 => "0101111100", 
    212 => "0101111110", 213 => "0110000000", 214 => "0110000010", 215 => "0110000011", 
    216 => "0110000101", 217 => "0110000111", 218 => "0110001001", 219 => "0110001011", 
    220 => "0110001100", 221 => "0110001110", 222 => "0110010000", 223 => "0110010010", 
    224 => "0110010100", 225 => "0110010101", 226 => "0110010111", 227 => "0110011001", 
    228 => "0110011011", 229 => "0110011101", 230 => "0110011110", 231 => "0110100000", 
    232 => "0110100010", 233 => "0110100100", 234 => "0110100110", 235 => "0110100111", 
    236 => "0110101001", 237 => "0110101011", 238 => "0110101101", 239 => "0110101111", 
    240 => "0110110000", 241 => "0110110010", 242 => "0110110100", 243 => "0110110110", 
    244 => "0110111000", 245 => "0110111001", 246 => "0110111011", 247 => "0110111101", 
    248 => "0110111111", 249 => "0111000001", 250 => "0111000010", 251 => "0111000100", 
    252 => "0111000110", 253 => "0111001000", 254 => "0111001010", 255 => "0111001011", 
    256 => "0111001101", 257 => "0111001111", 258 => "0111010001", 259 => "0111010011", 
    260 => "0111010100", 261 => "0111010110", 262 => "0111011000", 263 => "0111011010", 
    264 => "0111011100", 265 => "0111011101", 266 => "0111011111", 267 => "0111100001", 
    268 => "0111100011", 269 => "0111100101", 270 => "0111100110", 271 => "0111101000", 
    272 => "0111101010", 273 => "0111101100", 274 => "0111101110", 275 => "0111101111", 
    276 => "0111110001", 277 => "0111110011", 278 => "0111110101", 279 => "0111110111", 
    280 => "0111111000", 281 => "0111111010", 282 => "0111111100", 283 => "0111111110", 
    284 => "1000000000", 285 => "1000000001", 286 => "1000000011", 287 => "1000000101", 
    288 => "1000000111", 289 => "1000001001", 290 => "1000001010", 291 => "1000001100", 
    292 => "1000001110", 293 => "1000010000", 294 => "1000010010", 295 => "1000010011", 
    296 => "1000010101", 297 => "1000010111", 298 => "1000011001", 299 => "1000011011", 
    300 => "1000011100", 301 => "1000011110", 302 => "1000100000", 303 => "1000100010", 
    304 => "1000100100", 305 => "1000100101", 306 => "1000100111", 307 => "1000101001", 
    308 => "1000101011", 309 => "1000101101", 310 => "1000101110", 311 => "1000110000", 
    312 => "1000110010", 313 => "1000110100", 314 => "1000110110", 315 => "1000110111", 
    316 => "1000111001", 317 => "1000111011", 318 => "1000111101", 319 => "1000111111", 
    320 => "1001000000", 321 => "1001000010", 322 => "1001000100", 323 => "1001000110", 
    324 => "1001001000", 325 => "1001001001", 326 => "1001001011", 327 => "1001001101", 
    328 => "1001001111", 329 => "1001010001", 330 => "1001010010", 331 => "1001010100", 
    332 => "1001010110", 333 => "1001011000", 334 => "1001011010", 335 => "1001011011", 
    336 => "1001011101", 337 => "1001011111", 338 => "1001100001", 339 => "1001100011", 
    340 => "1001100100", 341 => "1001100110", 342 => "1001101000", 343 => "1001101010", 
    344 => "1001101100", 345 => "1001101101", 346 => "1001101111", 347 => "1001110001", 
    348 => "1001110011", 349 => "1001110101", 350 => "1001110110", 351 => "1001111000", 
    352 => "1001111010", 353 => "1001111100", 354 => "1001111110", 355 => "1001111111", 
    356 => "1010000001", 357 => "1010000011", 358 => "1010000101", 359 => "1010000111", 
    360 => "1010001000", 361 => "1010001010", 362 => "1010001100", 363 => "1010001110", 
    364 => "1010010000", 365 => "1010010001", 366 => "1010010011", 367 => "1010010101", 
    368 => "1010010111", 369 => "1010011001", 370 => "1010011010", 371 => "1010011100", 
    372 => "1010011110", 373 => "1010100000", 374 => "1010100010", 375 => "1010100011", 
    376 => "1010100101", 377 => "1010100111", 378 => "1010101001", 379 => "1010101011", 
    380 => "1010101100", 381 => "1010101110", 382 => "1010110000", 383 => "1010110010", 
    384 => "1010110100", 385 => "1010110101", 386 => "1010110111", 387 => "1010111001", 
    388 => "1010111011", 389 => "1010111101", 390 => "1010111110", 391 => "1011000000", 
    392 => "1011000010", 393 => "1011000100", 394 => "1011000110", 395 => "1011000111", 
    396 => "1011001001", 397 => "1011001011", 398 => "1011001101", 399 => "1011001111", 
    400 => "1011010000", 401 => "1011010010", 402 => "1011010100", 403 => "1011010110", 
    404 => "1011011000", 405 => "1011011001", 406 => "1011011011", 407 => "1011011101", 
    408 => "1011011111", 409 => "1011100001", 410 => "1011100010", 411 => "1011100100", 
    412 => "1011100110", 413 => "1011101000", 414 => "1011101010", 415 => "1011101011", 
    416 => "1011101101", 417 => "1011101111", 418 => "1011110001", 419 => "1011110011", 
    420 => "1011110100", 421 => "1011110110", 422 => "1011111000", 423 => "1011111010", 
    424 => "1011111100", 425 => "1011111101", 426 => "1011111111", 427 => "1100000001", 
    428 => "1100000011", 429 => "1100000101", 430 => "1100000110", 431 => "1100001000", 
    432 => "1100001010", 433 => "1100001100", 434 => "1100001110", 435 => "1100001111", 
    436 => "1100010001", 437 => "1100010011", 438 => "1100010101", 439 => "1100010111", 
    440 => "1100011000", 441 => "1100011010", 442 => "1100011100", 443 => "1100011110", 
    444 => "1100100000", 445 => "1100100001", 446 => "1100100011", 447 => "1100100101", 
    448 => "1100100111", 449 => "1100101001", 450 => "1100101010", 451 => "1100101100", 
    452 => "1100101110", 453 => "1100110000", 454 => "1100110010", 455 => "1100110011", 
    456 => "1100110101", 457 => "1100110111", 458 => "1100111001", 459 => "1100111011", 
    460 => "1100111100", 461 => "1100111110", 462 => "1101000000", 463 => "1101000010", 
    464 => "1101000100", 465 => "1101000101", 466 => "1101000111", 467 => "1101001001", 
    468 => "1101001011", 469 => "1101001101", 470 => "1101001110", 471 => "1101010000", 
    472 => "1101010010", 473 => "1101010100", 474 => "1101010110", 475 => "1101010111", 
    476 => "1101011001", 477 => "1101011011", 478 => "1101011101", 479 => "1101011111", 
    480 => "1101100000", 481 => "1101100010", 482 => "1101100100", 483 => "1101100110", 
    484 => "1101101000", 485 => "1101101001", 486 => "1101101011", 487 => "1101101101", 
    488 => "1101101111", 489 => "1101110001", 490 => "1101110010", 491 => "1101110100", 
    492 => "1101110110", 493 => "1101111000", 494 => "1101111010", 495 => "1101111011", 
    496 => "1101111101", 497 => "1101111111", 498 => "1110000001", 499 => "1110000011", 
    500 => "1110000100", 501 => "1110000110", 502 => "1110001000", 503 => "1110001010", 
    504 => "1110001100", 505 => "1110001101", 506 => "1110001111", 507 => "1110010001", 
    508 => "1110010011", 509 => "1110010101", 510 => "1110010110", 511 => "1110011000", 
    512 => "1110011010", 513 => "1110011100", 514 => "1110011110", 515 => "1110011111", 
    516 => "1110100001", 517 => "1110100011", 518 => "1110100101", 519 => "1110100111", 
    520 => "1110101000", 521 => "1110101010", 522 => "1110101100", 523 => "1110101110", 
    524 => "1110110000", 525 => "1110110001", 526 => "1110110011", 527 => "1110110101", 
    528 => "1110110111", 529 => "1110111001", 530 => "1110111010", 531 => "1110111100", 
    532 => "1110111110", 533 => "1111000000", 534 => "1111000010", 535 => "1111000011", 
    536 => "1111000101", 537 => "1111000111", 538 => "1111001001", 539 => "1111001011", 
    540 => "1111001100", 541 => "1111001110", 542 => "1111010000", 543 => "1111010010", 
    544 => "1111010100", 545 => "1111010101", 546 => "1111010111", 547 => "1111011001", 
    548 => "1111011011", 549 => "1111011101", 550 => "1111011110", 551 => "1111100000", 
    552 => "1111100010", 553 => "1111100100", 554 => "1111100110", 555 => "1111100111", 
    556 => "1111101001", 557 => "1111101011", 558 => "1111101101", 559 => "1111101111", 
    560 => "1111110000", 561 => "1111110010", 562 => "1111110100", 563 => "1111110110", 
    564 => "1111111000", 565 => "1111111001", 566 => "1111111011", 567 => "1111111101", 
    568 to 1023=> "1111111111" );


attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity Block_codeRepl846jbC is
    generic (
        DataWidth : INTEGER := 10;
        AddressRange : INTEGER := 1024;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Block_codeRepl846jbC is
    component Block_codeRepl846jbC_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Block_codeRepl846jbC_rom_U :  component Block_codeRepl846jbC_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


