-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.3
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity TPG is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_0_data_input_V : IN STD_LOGIC_VECTOR (13 downto 0);
    in_0_lincoeff_V : IN STD_LOGIC_VECTOR (23 downto 0);
    out_0_filOut_V : OUT STD_LOGIC_VECTOR (17 downto 0);
    out_0_filOut_V_ap_vld : OUT STD_LOGIC;
    out_0_peakOut : OUT STD_LOGIC;
    out_0_peakOut_ap_vld : OUT STD_LOGIC );
end;


architecture behav of TPG is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "TPG,hls_ip_2016_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcku115-flvb2104-2-e,HLS_INPUT_CLOCK=6.250000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.090000,HLS_SYN_LAT=4,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=274,HLS_SYN_LUT=308}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv21_3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv25_1FFFFDD : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111111011101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_shift_reg_V_0_3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    signal reg_shift_reg_V_0_2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    signal reg_shift_reg_V_0_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    signal reg_shift_reg_V_0_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    signal reg_peak_reg_V_0_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    signal reg_peak_reg_V_0_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    signal base_V_fu_144_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal base_V_reg_532 : STD_LOGIC_VECTOR (11 downto 0);
    signal shiftlin_V_reg_537 : STD_LOGIC_VECTOR (3 downto 0);
    signal mult_reg_542 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_518_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_1_reg_547 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal linearizerOutput_V_fu_200_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal linearizerOutput_V_reg_552 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_13_i_reg_557 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_4_i_fu_526_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_4_i_reg_562 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_4_reg_568 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_7_reg_574 : STD_LOGIC_VECTOR (17 downto 0);
    signal o_filOut_V_fu_473_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal o_filOut_V_reg_579 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_10_fu_120_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_fu_130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_lincoeff_V_i_fu_136_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal uncorrectedADC_V_fu_168_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_i_cast8_fu_182_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_i_fu_185_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_i_cast_fu_191_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_2_i_fu_195_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl_i_fu_218_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl_i_cast_fu_226_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_neg_i_fu_230_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_shl1_i_fu_240_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_neg_i_cast_fu_236_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_shl1_i_cast_fu_248_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_2_fu_252_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_shl6_i_fu_272_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_13_fu_284_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl6_i_cast_fu_280_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_shl7_i_cast_fu_290_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_4_3_i_fu_294_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_19_1_i_fu_354_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl8_i_fu_376_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl8_i_cast_fu_384_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal lhs_V_4_2_i_cast6_fu_372_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_4_2_i_fu_388_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_1_fu_394_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_19_1_i_cast_fu_368_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_2_fu_404_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_V_i_fu_345_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_5_fu_408_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_6_fu_417_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp4_fu_426_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_8_fu_432_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_fu_364_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp3_fu_437_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp2_fu_411_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_s_fu_447_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_9_fu_442_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal addconv_3_i_fu_453_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_14_fu_465_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal addconv_3_i_cast_fu_459_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_17_i_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_518_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_518_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_518_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_4_i_fu_526_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_4_i_fu_526_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_518_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_518_p10 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_518_p20 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_4_i_fu_526_p10 : STD_LOGIC_VECTOR (24 downto 0);

    component TPG_am_submul_12nbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component TPG_mul_mul_7s_18cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;



begin
    TPG_am_submul_12nbkb_U1 : component TPG_am_submul_12nbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 8,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_518_p0,
        din1 => grp_fu_518_p1,
        din2 => grp_fu_518_p2,
        dout => grp_fu_518_p3);

    TPG_mul_mul_7s_18cud_U2 : component TPG_mul_mul_7s_18cud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 18,
        dout_WIDTH => 25)
    port map (
        din0 => r_V_4_i_fu_526_p0,
        din1 => r_V_4_i_fu_526_p1,
        dout => r_V_4_i_fu_526_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then
                base_V_reg_532 <= base_V_fu_144_p1;
                mult_reg_542 <= p_lincoeff_V_i_fu_136_p3(23 downto 16);
                shiftlin_V_reg_537 <= p_lincoeff_V_i_fu_136_p3(15 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then
                linearizerOutput_V_reg_552 <= linearizerOutput_V_fu_200_p1;
                r_V_4_i_reg_562 <= r_V_4_i_fu_526_p2;
                reg_shift_reg_V_0_3 <= reg_shift_reg_V_0_2;
                tmp_13_i_reg_557 <= r_V_2_fu_252_p2(24 downto 6);
                tmp_4_reg_568 <= r_V_4_3_i_fu_294_p2(23 downto 6);
                tmp_7_reg_574 <= r_V_2_fu_252_p2(23 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then
                o_filOut_V_reg_579 <= o_filOut_V_fu_473_p3;
                reg_shift_reg_V_0_0 <= linearizerOutput_V_reg_552;
                reg_shift_reg_V_0_1 <= reg_shift_reg_V_0_0;
                reg_shift_reg_V_0_2 <= reg_shift_reg_V_0_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then
                r_V_1_reg_547 <= grp_fu_518_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5))) then
                reg_peak_reg_V_0_0 <= o_filOut_V_reg_579;
                reg_peak_reg_V_0_1 <= reg_peak_reg_V_0_0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    addconv_3_i_cast_fu_459_p2 <= std_logic_vector(unsigned(tmp_s_fu_447_p2) + unsigned(tmp_9_fu_442_p2));
    addconv_3_i_fu_453_p2 <= std_logic_vector(unsigned(tmp3_fu_437_p2) + unsigned(tmp2_fu_411_p2));
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);

    ap_done_assign_proc : process(ap_CS_fsm_state5)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    base_V_fu_144_p1 <= p_lincoeff_V_i_fu_136_p3(12 - 1 downto 0);
    grp_fu_518_p0 <= grp_fu_518_p00(12 - 1 downto 0);
    grp_fu_518_p00 <= std_logic_vector(resize(unsigned(uncorrectedADC_V_fu_168_p1),13));
    grp_fu_518_p1 <= grp_fu_518_p10(12 - 1 downto 0);
    grp_fu_518_p10 <= std_logic_vector(resize(unsigned(base_V_reg_532),13));
    grp_fu_518_p2 <= grp_fu_518_p20(8 - 1 downto 0);
    grp_fu_518_p20 <= std_logic_vector(resize(unsigned(mult_reg_542),21));
    icmp_fu_130_p2 <= "1" when (tmp_10_fu_120_p4 = ap_const_lv8_0) else "0";
    lhs_V_4_2_i_cast6_fu_372_p1 <= std_logic_vector(resize(unsigned(reg_shift_reg_V_0_0),24));
    linearizerOutput_V_fu_200_p1 <= tmp_2_i_fu_195_p2(18 - 1 downto 0);
    mul_V_i_fu_345_p4 <= r_V_4_i_reg_562(24 downto 6);
    o_filOut_V_fu_473_p3 <= 
        ap_const_lv18_0 when (tmp_14_fu_465_p3(0) = '1') else 
        addconv_3_i_cast_fu_459_p2;
    out_0_filOut_V <= o_filOut_V_reg_579;

    out_0_filOut_V_ap_vld_assign_proc : process(ap_CS_fsm_state5)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            out_0_filOut_V_ap_vld <= ap_const_logic_1;
        else 
            out_0_filOut_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_0_peakOut <= (tmp_17_i_fu_485_p2(0) and tmp_18_i_fu_494_p2(0));

    out_0_peakOut_ap_vld_assign_proc : process(ap_CS_fsm_state5)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            out_0_peakOut_ap_vld <= ap_const_logic_1;
        else 
            out_0_peakOut_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_lincoeff_V_i_fu_136_p3 <= 
        ap_const_lv24_0 when (icmp_fu_130_p2(0) = '1') else 
        in_0_lincoeff_V;
        p_neg_i_cast_fu_236_p1 <= std_logic_vector(resize(signed(p_neg_i_fu_230_p2),25));

    p_neg_i_fu_230_p2 <= std_logic_vector(unsigned(ap_const_lv24_0) - unsigned(p_shl_i_cast_fu_226_p1));
    p_shl1_i_cast_fu_248_p1 <= std_logic_vector(resize(unsigned(p_shl1_i_fu_240_p3),25));
    p_shl1_i_fu_240_p3 <= (reg_shift_reg_V_0_3 & ap_const_lv2_0);
    p_shl6_i_cast_fu_280_p1 <= std_logic_vector(resize(unsigned(p_shl6_i_fu_272_p3),24));
    p_shl6_i_fu_272_p3 <= (linearizerOutput_V_fu_200_p1 & ap_const_lv5_0);
    p_shl7_i_cast_fu_290_p1 <= std_logic_vector(resize(unsigned(tmp_13_fu_284_p2),24));
    p_shl8_i_cast_fu_384_p1 <= std_logic_vector(resize(unsigned(p_shl8_i_fu_376_p3),24));
    p_shl8_i_fu_376_p3 <= (reg_shift_reg_V_0_0 & ap_const_lv5_0);
    p_shl_i_cast_fu_226_p1 <= std_logic_vector(resize(unsigned(p_shl_i_fu_218_p3),24));
    p_shl_i_fu_218_p3 <= (reg_shift_reg_V_0_3 & ap_const_lv5_0);
    r_V_2_fu_252_p2 <= std_logic_vector(signed(p_neg_i_cast_fu_236_p1) - signed(p_shl1_i_cast_fu_248_p1));
    r_V_4_2_i_fu_388_p2 <= std_logic_vector(unsigned(p_shl8_i_cast_fu_384_p1) - unsigned(lhs_V_4_2_i_cast6_fu_372_p1));
    r_V_4_3_i_fu_294_p2 <= std_logic_vector(unsigned(p_shl6_i_cast_fu_280_p1) - unsigned(p_shl7_i_cast_fu_290_p1));
    r_V_4_i_fu_526_p0 <= ap_const_lv25_1FFFFDD(7 - 1 downto 0);
    r_V_4_i_fu_526_p1 <= r_V_4_i_fu_526_p10(18 - 1 downto 0);
    r_V_4_i_fu_526_p10 <= std_logic_vector(resize(unsigned(reg_shift_reg_V_0_2),25));
    tmp2_fu_411_p2 <= std_logic_vector(unsigned(tmp_19_1_i_cast_fu_368_p1) + unsigned(tmp_2_fu_404_p1));
    tmp3_fu_437_p2 <= std_logic_vector(unsigned(tmp4_fu_426_p2) + unsigned(tmp_13_i_reg_557));
    tmp4_fu_426_p2 <= std_logic_vector(unsigned(mul_V_i_fu_345_p4) + unsigned(tmp_5_fu_408_p1));
    tmp_10_fu_120_p4 <= in_0_lincoeff_V(23 downto 16);
    tmp_13_fu_284_p2 <= std_logic_vector(shift_left(unsigned(tmp_2_i_fu_195_p2),to_integer(unsigned('0' & ap_const_lv21_3(21-1 downto 0)))));
    tmp_14_fu_465_p3 <= addconv_3_i_fu_453_p2(18 downto 18);
    tmp_17_i_fu_485_p2 <= "1" when (unsigned(reg_peak_reg_V_0_0) > unsigned(o_filOut_V_reg_579)) else "0";
    tmp_18_i_fu_494_p2 <= "1" when (unsigned(reg_peak_reg_V_0_0) > unsigned(reg_peak_reg_V_0_1)) else "0";
    tmp_19_1_i_cast_fu_368_p1 <= std_logic_vector(resize(unsigned(tmp_19_1_i_fu_354_p4),19));
    tmp_19_1_i_fu_354_p4 <= reg_shift_reg_V_0_1(17 downto 2);
    tmp_1_fu_394_p4 <= r_V_4_2_i_fu_388_p2(23 downto 6);
    tmp_1_i_cast_fu_191_p1 <= std_logic_vector(resize(unsigned(tmp_1_i_fu_185_p2),21));
    tmp_1_i_fu_185_p2 <= std_logic_vector(unsigned(ap_const_lv5_2) + unsigned(tmp_3_i_cast8_fu_182_p1));
        tmp_2_fu_404_p1 <= std_logic_vector(resize(signed(tmp_1_fu_394_p4),19));

    tmp_2_i_fu_195_p2 <= std_logic_vector(shift_right(signed(r_V_1_reg_547),to_integer(unsigned('0' & tmp_1_i_cast_fu_191_p1(21-1 downto 0)))));
    tmp_3_i_cast8_fu_182_p1 <= std_logic_vector(resize(unsigned(shiftlin_V_reg_537),5));
        tmp_5_fu_408_p1 <= std_logic_vector(resize(signed(tmp_4_reg_568),19));

    tmp_6_fu_417_p4 <= r_V_4_i_reg_562(23 downto 6);
    tmp_8_fu_432_p2 <= std_logic_vector(unsigned(tmp_4_reg_568) + unsigned(tmp_6_fu_417_p4));
    tmp_9_fu_442_p2 <= std_logic_vector(unsigned(tmp_7_reg_574) + unsigned(tmp_8_fu_432_p2));
    tmp_fu_364_p1 <= std_logic_vector(resize(unsigned(tmp_19_1_i_fu_354_p4),18));
    tmp_s_fu_447_p2 <= std_logic_vector(unsigned(tmp_1_fu_394_p4) + unsigned(tmp_fu_364_p1));
    uncorrectedADC_V_fu_168_p1 <= in_0_data_input_V(12 - 1 downto 0);
end behav;
