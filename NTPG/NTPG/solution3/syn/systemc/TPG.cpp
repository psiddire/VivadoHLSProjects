// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "TPG.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic TPG::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic TPG::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> TPG::ap_ST_fsm_state1 = "1";
const sc_lv<5> TPG::ap_ST_fsm_state2 = "10";
const sc_lv<5> TPG::ap_ST_fsm_state3 = "100";
const sc_lv<5> TPG::ap_ST_fsm_state4 = "1000";
const sc_lv<5> TPG::ap_ST_fsm_state5 = "10000";
const sc_lv<32> TPG::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> TPG::ap_const_lv1_1 = "1";
const sc_lv<18> TPG::ap_const_lv18_0 = "000000000000000000";
const sc_lv<32> TPG::ap_const_lv32_1 = "1";
const sc_lv<32> TPG::ap_const_lv32_2 = "10";
const sc_lv<32> TPG::ap_const_lv32_3 = "11";
const sc_lv<32> TPG::ap_const_lv32_4 = "100";
const sc_lv<32> TPG::ap_const_lv32_10 = "10000";
const sc_lv<32> TPG::ap_const_lv32_17 = "10111";
const sc_lv<8> TPG::ap_const_lv8_0 = "00000000";
const sc_lv<24> TPG::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<32> TPG::ap_const_lv32_C = "1100";
const sc_lv<32> TPG::ap_const_lv32_F = "1111";
const sc_lv<5> TPG::ap_const_lv5_2 = "10";
const sc_lv<5> TPG::ap_const_lv5_0 = "00000";
const sc_lv<2> TPG::ap_const_lv2_0 = "00";
const sc_lv<32> TPG::ap_const_lv32_6 = "110";
const sc_lv<32> TPG::ap_const_lv32_18 = "11000";
const sc_lv<21> TPG::ap_const_lv21_3 = "11";
const sc_lv<32> TPG::ap_const_lv32_11 = "10001";
const sc_lv<32> TPG::ap_const_lv32_12 = "10010";
const sc_lv<25> TPG::ap_const_lv25_1FFFFDD = "1111111111111111111011101";

TPG::TPG(sc_module_name name) : sc_module(name), mVcdFile(0) {
    TPG_am_submul_12nbkb_U1 = new TPG_am_submul_12nbkb<1,1,12,12,8,21>("TPG_am_submul_12nbkb_U1");
    TPG_am_submul_12nbkb_U1->din0(grp_fu_518_p0);
    TPG_am_submul_12nbkb_U1->din1(grp_fu_518_p1);
    TPG_am_submul_12nbkb_U1->din2(grp_fu_518_p2);
    TPG_am_submul_12nbkb_U1->dout(grp_fu_518_p3);
    TPG_mul_mul_7s_18cud_U2 = new TPG_mul_mul_7s_18cud<1,1,7,18,25>("TPG_mul_mul_7s_18cud_U2");
    TPG_mul_mul_7s_18cud_U2->din0(r_V_4_i_fu_526_p0);
    TPG_mul_mul_7s_18cud_U2->din1(r_V_4_i_fu_526_p1);
    TPG_mul_mul_7s_18cud_U2->dout(r_V_4_i_fu_526_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_addconv_3_i_cast_fu_459_p2);
    sensitive << ( tmp_s_fu_447_p2 );
    sensitive << ( tmp_9_fu_442_p2 );

    SC_METHOD(thread_addconv_3_i_fu_453_p2);
    sensitive << ( tmp3_fu_437_p2 );
    sensitive << ( tmp2_fu_411_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_base_V_fu_144_p1);
    sensitive << ( p_lincoeff_V_i_fu_136_p3 );

    SC_METHOD(thread_grp_fu_518_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fu_518_p00 );

    SC_METHOD(thread_grp_fu_518_p00);
    sensitive << ( uncorrectedADC_V_fu_168_p1 );

    SC_METHOD(thread_grp_fu_518_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fu_518_p10 );

    SC_METHOD(thread_grp_fu_518_p10);
    sensitive << ( base_V_reg_532 );

    SC_METHOD(thread_grp_fu_518_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fu_518_p20 );

    SC_METHOD(thread_grp_fu_518_p20);
    sensitive << ( mult_reg_542 );

    SC_METHOD(thread_icmp_fu_130_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_10_fu_120_p4 );

    SC_METHOD(thread_lhs_V_4_2_i_cast6_fu_372_p1);
    sensitive << ( reg_shift_reg_V_0_0 );

    SC_METHOD(thread_linearizerOutput_V_fu_200_p1);
    sensitive << ( tmp_2_i_fu_195_p2 );

    SC_METHOD(thread_mul_V_i_fu_345_p4);
    sensitive << ( r_V_4_i_reg_562 );

    SC_METHOD(thread_o_filOut_V_fu_473_p3);
    sensitive << ( tmp_14_fu_465_p3 );
    sensitive << ( addconv_3_i_cast_fu_459_p2 );

    SC_METHOD(thread_out_0_filOut_V);
    sensitive << ( o_filOut_V_reg_579 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_out_0_filOut_V_ap_vld);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_out_0_peakOut);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_17_i_fu_485_p2 );
    sensitive << ( tmp_18_i_fu_494_p2 );

    SC_METHOD(thread_out_0_peakOut_ap_vld);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_p_lincoeff_V_i_fu_136_p3);
    sensitive << ( in_0_lincoeff_V );
    sensitive << ( icmp_fu_130_p2 );

    SC_METHOD(thread_p_neg_i_cast_fu_236_p1);
    sensitive << ( p_neg_i_fu_230_p2 );

    SC_METHOD(thread_p_neg_i_fu_230_p2);
    sensitive << ( p_shl_i_cast_fu_226_p1 );

    SC_METHOD(thread_p_shl1_i_cast_fu_248_p1);
    sensitive << ( p_shl1_i_fu_240_p3 );

    SC_METHOD(thread_p_shl1_i_fu_240_p3);
    sensitive << ( reg_shift_reg_V_0_3 );

    SC_METHOD(thread_p_shl6_i_cast_fu_280_p1);
    sensitive << ( p_shl6_i_fu_272_p3 );

    SC_METHOD(thread_p_shl6_i_fu_272_p3);
    sensitive << ( linearizerOutput_V_fu_200_p1 );

    SC_METHOD(thread_p_shl7_i_cast_fu_290_p1);
    sensitive << ( tmp_13_fu_284_p2 );

    SC_METHOD(thread_p_shl8_i_cast_fu_384_p1);
    sensitive << ( p_shl8_i_fu_376_p3 );

    SC_METHOD(thread_p_shl8_i_fu_376_p3);
    sensitive << ( reg_shift_reg_V_0_0 );

    SC_METHOD(thread_p_shl_i_cast_fu_226_p1);
    sensitive << ( p_shl_i_fu_218_p3 );

    SC_METHOD(thread_p_shl_i_fu_218_p3);
    sensitive << ( reg_shift_reg_V_0_3 );

    SC_METHOD(thread_r_V_2_fu_252_p2);
    sensitive << ( p_neg_i_cast_fu_236_p1 );
    sensitive << ( p_shl1_i_cast_fu_248_p1 );

    SC_METHOD(thread_r_V_4_2_i_fu_388_p2);
    sensitive << ( p_shl8_i_cast_fu_384_p1 );
    sensitive << ( lhs_V_4_2_i_cast6_fu_372_p1 );

    SC_METHOD(thread_r_V_4_3_i_fu_294_p2);
    sensitive << ( p_shl6_i_cast_fu_280_p1 );
    sensitive << ( p_shl7_i_cast_fu_290_p1 );

    SC_METHOD(thread_r_V_4_i_fu_526_p0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_r_V_4_i_fu_526_p1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( r_V_4_i_fu_526_p10 );

    SC_METHOD(thread_r_V_4_i_fu_526_p10);
    sensitive << ( reg_shift_reg_V_0_2 );

    SC_METHOD(thread_tmp2_fu_411_p2);
    sensitive << ( tmp_19_1_i_cast_fu_368_p1 );
    sensitive << ( tmp_2_fu_404_p1 );

    SC_METHOD(thread_tmp3_fu_437_p2);
    sensitive << ( tmp_13_i_reg_557 );
    sensitive << ( tmp4_fu_426_p2 );

    SC_METHOD(thread_tmp4_fu_426_p2);
    sensitive << ( mul_V_i_fu_345_p4 );
    sensitive << ( tmp_5_fu_408_p1 );

    SC_METHOD(thread_tmp_10_fu_120_p4);
    sensitive << ( in_0_lincoeff_V );

    SC_METHOD(thread_tmp_13_fu_284_p2);
    sensitive << ( tmp_2_i_fu_195_p2 );

    SC_METHOD(thread_tmp_14_fu_465_p3);
    sensitive << ( addconv_3_i_fu_453_p2 );

    SC_METHOD(thread_tmp_17_i_fu_485_p2);
    sensitive << ( reg_peak_reg_V_0_0 );
    sensitive << ( o_filOut_V_reg_579 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_18_i_fu_494_p2);
    sensitive << ( reg_peak_reg_V_0_0 );
    sensitive << ( reg_peak_reg_V_0_1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_19_1_i_cast_fu_368_p1);
    sensitive << ( tmp_19_1_i_fu_354_p4 );

    SC_METHOD(thread_tmp_19_1_i_fu_354_p4);
    sensitive << ( reg_shift_reg_V_0_1 );

    SC_METHOD(thread_tmp_1_fu_394_p4);
    sensitive << ( r_V_4_2_i_fu_388_p2 );

    SC_METHOD(thread_tmp_1_i_cast_fu_191_p1);
    sensitive << ( tmp_1_i_fu_185_p2 );

    SC_METHOD(thread_tmp_1_i_fu_185_p2);
    sensitive << ( tmp_3_i_cast8_fu_182_p1 );

    SC_METHOD(thread_tmp_2_fu_404_p1);
    sensitive << ( tmp_1_fu_394_p4 );

    SC_METHOD(thread_tmp_2_i_fu_195_p2);
    sensitive << ( r_V_1_reg_547 );
    sensitive << ( tmp_1_i_cast_fu_191_p1 );

    SC_METHOD(thread_tmp_3_i_cast8_fu_182_p1);
    sensitive << ( shiftlin_V_reg_537 );

    SC_METHOD(thread_tmp_5_fu_408_p1);
    sensitive << ( tmp_4_reg_568 );

    SC_METHOD(thread_tmp_6_fu_417_p4);
    sensitive << ( r_V_4_i_reg_562 );

    SC_METHOD(thread_tmp_8_fu_432_p2);
    sensitive << ( tmp_4_reg_568 );
    sensitive << ( tmp_6_fu_417_p4 );

    SC_METHOD(thread_tmp_9_fu_442_p2);
    sensitive << ( tmp_7_reg_574 );
    sensitive << ( tmp_8_fu_432_p2 );

    SC_METHOD(thread_tmp_fu_364_p1);
    sensitive << ( tmp_19_1_i_fu_354_p4 );

    SC_METHOD(thread_tmp_s_fu_447_p2);
    sensitive << ( tmp_1_fu_394_p4 );
    sensitive << ( tmp_fu_364_p1 );

    SC_METHOD(thread_uncorrectedADC_V_fu_168_p1);
    sensitive << ( in_0_data_input_V );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00001";
    reg_shift_reg_V_0_3 = "000000000000000000";
    reg_shift_reg_V_0_2 = "000000000000000000";
    reg_shift_reg_V_0_1 = "000000000000000000";
    reg_shift_reg_V_0_0 = "000000000000000000";
    reg_peak_reg_V_0_0 = "000000000000000000";
    reg_peak_reg_V_0_1 = "000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "TPG_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_0_data_input_V, "(port)in_0_data_input_V");
    sc_trace(mVcdFile, in_0_lincoeff_V, "(port)in_0_lincoeff_V");
    sc_trace(mVcdFile, out_0_filOut_V, "(port)out_0_filOut_V");
    sc_trace(mVcdFile, out_0_filOut_V_ap_vld, "(port)out_0_filOut_V_ap_vld");
    sc_trace(mVcdFile, out_0_peakOut, "(port)out_0_peakOut");
    sc_trace(mVcdFile, out_0_peakOut_ap_vld, "(port)out_0_peakOut_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_shift_reg_V_0_3, "reg_shift_reg_V_0_3");
    sc_trace(mVcdFile, reg_shift_reg_V_0_2, "reg_shift_reg_V_0_2");
    sc_trace(mVcdFile, reg_shift_reg_V_0_1, "reg_shift_reg_V_0_1");
    sc_trace(mVcdFile, reg_shift_reg_V_0_0, "reg_shift_reg_V_0_0");
    sc_trace(mVcdFile, reg_peak_reg_V_0_0, "reg_peak_reg_V_0_0");
    sc_trace(mVcdFile, reg_peak_reg_V_0_1, "reg_peak_reg_V_0_1");
    sc_trace(mVcdFile, base_V_fu_144_p1, "base_V_fu_144_p1");
    sc_trace(mVcdFile, base_V_reg_532, "base_V_reg_532");
    sc_trace(mVcdFile, shiftlin_V_reg_537, "shiftlin_V_reg_537");
    sc_trace(mVcdFile, mult_reg_542, "mult_reg_542");
    sc_trace(mVcdFile, grp_fu_518_p3, "grp_fu_518_p3");
    sc_trace(mVcdFile, r_V_1_reg_547, "r_V_1_reg_547");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, linearizerOutput_V_fu_200_p1, "linearizerOutput_V_fu_200_p1");
    sc_trace(mVcdFile, linearizerOutput_V_reg_552, "linearizerOutput_V_reg_552");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_13_i_reg_557, "tmp_13_i_reg_557");
    sc_trace(mVcdFile, r_V_4_i_fu_526_p2, "r_V_4_i_fu_526_p2");
    sc_trace(mVcdFile, r_V_4_i_reg_562, "r_V_4_i_reg_562");
    sc_trace(mVcdFile, tmp_4_reg_568, "tmp_4_reg_568");
    sc_trace(mVcdFile, tmp_7_reg_574, "tmp_7_reg_574");
    sc_trace(mVcdFile, o_filOut_V_fu_473_p3, "o_filOut_V_fu_473_p3");
    sc_trace(mVcdFile, o_filOut_V_reg_579, "o_filOut_V_reg_579");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_10_fu_120_p4, "tmp_10_fu_120_p4");
    sc_trace(mVcdFile, icmp_fu_130_p2, "icmp_fu_130_p2");
    sc_trace(mVcdFile, p_lincoeff_V_i_fu_136_p3, "p_lincoeff_V_i_fu_136_p3");
    sc_trace(mVcdFile, uncorrectedADC_V_fu_168_p1, "uncorrectedADC_V_fu_168_p1");
    sc_trace(mVcdFile, tmp_3_i_cast8_fu_182_p1, "tmp_3_i_cast8_fu_182_p1");
    sc_trace(mVcdFile, tmp_1_i_fu_185_p2, "tmp_1_i_fu_185_p2");
    sc_trace(mVcdFile, tmp_1_i_cast_fu_191_p1, "tmp_1_i_cast_fu_191_p1");
    sc_trace(mVcdFile, tmp_2_i_fu_195_p2, "tmp_2_i_fu_195_p2");
    sc_trace(mVcdFile, p_shl_i_fu_218_p3, "p_shl_i_fu_218_p3");
    sc_trace(mVcdFile, p_shl_i_cast_fu_226_p1, "p_shl_i_cast_fu_226_p1");
    sc_trace(mVcdFile, p_neg_i_fu_230_p2, "p_neg_i_fu_230_p2");
    sc_trace(mVcdFile, p_shl1_i_fu_240_p3, "p_shl1_i_fu_240_p3");
    sc_trace(mVcdFile, p_neg_i_cast_fu_236_p1, "p_neg_i_cast_fu_236_p1");
    sc_trace(mVcdFile, p_shl1_i_cast_fu_248_p1, "p_shl1_i_cast_fu_248_p1");
    sc_trace(mVcdFile, r_V_2_fu_252_p2, "r_V_2_fu_252_p2");
    sc_trace(mVcdFile, p_shl6_i_fu_272_p3, "p_shl6_i_fu_272_p3");
    sc_trace(mVcdFile, tmp_13_fu_284_p2, "tmp_13_fu_284_p2");
    sc_trace(mVcdFile, p_shl6_i_cast_fu_280_p1, "p_shl6_i_cast_fu_280_p1");
    sc_trace(mVcdFile, p_shl7_i_cast_fu_290_p1, "p_shl7_i_cast_fu_290_p1");
    sc_trace(mVcdFile, r_V_4_3_i_fu_294_p2, "r_V_4_3_i_fu_294_p2");
    sc_trace(mVcdFile, tmp_19_1_i_fu_354_p4, "tmp_19_1_i_fu_354_p4");
    sc_trace(mVcdFile, p_shl8_i_fu_376_p3, "p_shl8_i_fu_376_p3");
    sc_trace(mVcdFile, p_shl8_i_cast_fu_384_p1, "p_shl8_i_cast_fu_384_p1");
    sc_trace(mVcdFile, lhs_V_4_2_i_cast6_fu_372_p1, "lhs_V_4_2_i_cast6_fu_372_p1");
    sc_trace(mVcdFile, r_V_4_2_i_fu_388_p2, "r_V_4_2_i_fu_388_p2");
    sc_trace(mVcdFile, tmp_1_fu_394_p4, "tmp_1_fu_394_p4");
    sc_trace(mVcdFile, tmp_19_1_i_cast_fu_368_p1, "tmp_19_1_i_cast_fu_368_p1");
    sc_trace(mVcdFile, tmp_2_fu_404_p1, "tmp_2_fu_404_p1");
    sc_trace(mVcdFile, mul_V_i_fu_345_p4, "mul_V_i_fu_345_p4");
    sc_trace(mVcdFile, tmp_5_fu_408_p1, "tmp_5_fu_408_p1");
    sc_trace(mVcdFile, tmp_6_fu_417_p4, "tmp_6_fu_417_p4");
    sc_trace(mVcdFile, tmp4_fu_426_p2, "tmp4_fu_426_p2");
    sc_trace(mVcdFile, tmp_8_fu_432_p2, "tmp_8_fu_432_p2");
    sc_trace(mVcdFile, tmp_fu_364_p1, "tmp_fu_364_p1");
    sc_trace(mVcdFile, tmp3_fu_437_p2, "tmp3_fu_437_p2");
    sc_trace(mVcdFile, tmp2_fu_411_p2, "tmp2_fu_411_p2");
    sc_trace(mVcdFile, tmp_s_fu_447_p2, "tmp_s_fu_447_p2");
    sc_trace(mVcdFile, tmp_9_fu_442_p2, "tmp_9_fu_442_p2");
    sc_trace(mVcdFile, addconv_3_i_fu_453_p2, "addconv_3_i_fu_453_p2");
    sc_trace(mVcdFile, tmp_14_fu_465_p3, "tmp_14_fu_465_p3");
    sc_trace(mVcdFile, addconv_3_i_cast_fu_459_p2, "addconv_3_i_cast_fu_459_p2");
    sc_trace(mVcdFile, tmp_17_i_fu_485_p2, "tmp_17_i_fu_485_p2");
    sc_trace(mVcdFile, tmp_18_i_fu_494_p2, "tmp_18_i_fu_494_p2");
    sc_trace(mVcdFile, grp_fu_518_p0, "grp_fu_518_p0");
    sc_trace(mVcdFile, grp_fu_518_p1, "grp_fu_518_p1");
    sc_trace(mVcdFile, grp_fu_518_p2, "grp_fu_518_p2");
    sc_trace(mVcdFile, r_V_4_i_fu_526_p0, "r_V_4_i_fu_526_p0");
    sc_trace(mVcdFile, r_V_4_i_fu_526_p1, "r_V_4_i_fu_526_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_518_p00, "grp_fu_518_p00");
    sc_trace(mVcdFile, grp_fu_518_p10, "grp_fu_518_p10");
    sc_trace(mVcdFile, grp_fu_518_p20, "grp_fu_518_p20");
    sc_trace(mVcdFile, r_V_4_i_fu_526_p10, "r_V_4_i_fu_526_p10");
#endif

    }
    mHdltvinHandle.open("TPG.hdltvin.dat");
    mHdltvoutHandle.open("TPG.hdltvout.dat");
}

TPG::~TPG() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete TPG_am_submul_12nbkb_U1;
    delete TPG_mul_mul_7s_18cud_U2;
}

void TPG::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        base_V_reg_532 = base_V_fu_144_p1.read();
        mult_reg_542 = p_lincoeff_V_i_fu_136_p3.read().range(23, 16);
        shiftlin_V_reg_537 = p_lincoeff_V_i_fu_136_p3.read().range(15, 12);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        linearizerOutput_V_reg_552 = linearizerOutput_V_fu_200_p1.read();
        r_V_4_i_reg_562 = r_V_4_i_fu_526_p2.read();
        reg_shift_reg_V_0_3 = reg_shift_reg_V_0_2.read();
        tmp_13_i_reg_557 = r_V_2_fu_252_p2.read().range(24, 6);
        tmp_4_reg_568 = r_V_4_3_i_fu_294_p2.read().range(23, 6);
        tmp_7_reg_574 = r_V_2_fu_252_p2.read().range(23, 6);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        o_filOut_V_reg_579 = o_filOut_V_fu_473_p3.read();
        reg_shift_reg_V_0_0 = linearizerOutput_V_reg_552.read();
        reg_shift_reg_V_0_1 = reg_shift_reg_V_0_0.read();
        reg_shift_reg_V_0_2 = reg_shift_reg_V_0_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        r_V_1_reg_547 = grp_fu_518_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        reg_peak_reg_V_0_0 = o_filOut_V_reg_579.read();
        reg_peak_reg_V_0_1 = reg_peak_reg_V_0_0.read();
    }
}

void TPG::thread_addconv_3_i_cast_fu_459_p2() {
    addconv_3_i_cast_fu_459_p2 = (!tmp_s_fu_447_p2.read().is_01() || !tmp_9_fu_442_p2.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_s_fu_447_p2.read()) + sc_biguint<18>(tmp_9_fu_442_p2.read()));
}

void TPG::thread_addconv_3_i_fu_453_p2() {
    addconv_3_i_fu_453_p2 = (!tmp3_fu_437_p2.read().is_01() || !tmp2_fu_411_p2.read().is_01())? sc_lv<19>(): (sc_biguint<19>(tmp3_fu_437_p2.read()) + sc_biguint<19>(tmp2_fu_411_p2.read()));
}

void TPG::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void TPG::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void TPG::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void TPG::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void TPG::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void TPG::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void TPG::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void TPG::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void TPG::thread_base_V_fu_144_p1() {
    base_V_fu_144_p1 = p_lincoeff_V_i_fu_136_p3.read().range(12-1, 0);
}

void TPG::thread_grp_fu_518_p0() {
    grp_fu_518_p0 =  (sc_lv<12>) (grp_fu_518_p00.read());
}

void TPG::thread_grp_fu_518_p00() {
    grp_fu_518_p00 = esl_zext<13,12>(uncorrectedADC_V_fu_168_p1.read());
}

void TPG::thread_grp_fu_518_p1() {
    grp_fu_518_p1 =  (sc_lv<12>) (grp_fu_518_p10.read());
}

void TPG::thread_grp_fu_518_p10() {
    grp_fu_518_p10 = esl_zext<13,12>(base_V_reg_532.read());
}

void TPG::thread_grp_fu_518_p2() {
    grp_fu_518_p2 =  (sc_lv<8>) (grp_fu_518_p20.read());
}

void TPG::thread_grp_fu_518_p20() {
    grp_fu_518_p20 = esl_zext<21,8>(mult_reg_542.read());
}

void TPG::thread_icmp_fu_130_p2() {
    icmp_fu_130_p2 = (!tmp_10_fu_120_p4.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_10_fu_120_p4.read() == ap_const_lv8_0);
}

void TPG::thread_lhs_V_4_2_i_cast6_fu_372_p1() {
    lhs_V_4_2_i_cast6_fu_372_p1 = esl_zext<24,18>(reg_shift_reg_V_0_0.read());
}

void TPG::thread_linearizerOutput_V_fu_200_p1() {
    linearizerOutput_V_fu_200_p1 = tmp_2_i_fu_195_p2.read().range(18-1, 0);
}

void TPG::thread_mul_V_i_fu_345_p4() {
    mul_V_i_fu_345_p4 = r_V_4_i_reg_562.read().range(24, 6);
}

void TPG::thread_o_filOut_V_fu_473_p3() {
    o_filOut_V_fu_473_p3 = (!tmp_14_fu_465_p3.read()[0].is_01())? sc_lv<18>(): ((tmp_14_fu_465_p3.read()[0].to_bool())? ap_const_lv18_0: addconv_3_i_cast_fu_459_p2.read());
}

void TPG::thread_out_0_filOut_V() {
    out_0_filOut_V = o_filOut_V_reg_579.read();
}

void TPG::thread_out_0_filOut_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        out_0_filOut_V_ap_vld = ap_const_logic_1;
    } else {
        out_0_filOut_V_ap_vld = ap_const_logic_0;
    }
}

void TPG::thread_out_0_peakOut() {
    out_0_peakOut =  (sc_logic) ((tmp_17_i_fu_485_p2.read() & tmp_18_i_fu_494_p2.read()))[0];
}

void TPG::thread_out_0_peakOut_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        out_0_peakOut_ap_vld = ap_const_logic_1;
    } else {
        out_0_peakOut_ap_vld = ap_const_logic_0;
    }
}

void TPG::thread_p_lincoeff_V_i_fu_136_p3() {
    p_lincoeff_V_i_fu_136_p3 = (!icmp_fu_130_p2.read()[0].is_01())? sc_lv<24>(): ((icmp_fu_130_p2.read()[0].to_bool())? ap_const_lv24_0: in_0_lincoeff_V.read());
}

void TPG::thread_p_neg_i_cast_fu_236_p1() {
    p_neg_i_cast_fu_236_p1 = esl_sext<25,24>(p_neg_i_fu_230_p2.read());
}

void TPG::thread_p_neg_i_fu_230_p2() {
    p_neg_i_fu_230_p2 = (!ap_const_lv24_0.is_01() || !p_shl_i_cast_fu_226_p1.read().is_01())? sc_lv<24>(): (sc_biguint<24>(ap_const_lv24_0) - sc_biguint<24>(p_shl_i_cast_fu_226_p1.read()));
}

void TPG::thread_p_shl1_i_cast_fu_248_p1() {
    p_shl1_i_cast_fu_248_p1 = esl_zext<25,20>(p_shl1_i_fu_240_p3.read());
}

void TPG::thread_p_shl1_i_fu_240_p3() {
    p_shl1_i_fu_240_p3 = esl_concat<18,2>(reg_shift_reg_V_0_3.read(), ap_const_lv2_0);
}

void TPG::thread_p_shl6_i_cast_fu_280_p1() {
    p_shl6_i_cast_fu_280_p1 = esl_zext<24,23>(p_shl6_i_fu_272_p3.read());
}

void TPG::thread_p_shl6_i_fu_272_p3() {
    p_shl6_i_fu_272_p3 = esl_concat<18,5>(linearizerOutput_V_fu_200_p1.read(), ap_const_lv5_0);
}

void TPG::thread_p_shl7_i_cast_fu_290_p1() {
    p_shl7_i_cast_fu_290_p1 = esl_zext<24,21>(tmp_13_fu_284_p2.read());
}

void TPG::thread_p_shl8_i_cast_fu_384_p1() {
    p_shl8_i_cast_fu_384_p1 = esl_zext<24,23>(p_shl8_i_fu_376_p3.read());
}

void TPG::thread_p_shl8_i_fu_376_p3() {
    p_shl8_i_fu_376_p3 = esl_concat<18,5>(reg_shift_reg_V_0_0.read(), ap_const_lv5_0);
}

void TPG::thread_p_shl_i_cast_fu_226_p1() {
    p_shl_i_cast_fu_226_p1 = esl_zext<24,23>(p_shl_i_fu_218_p3.read());
}

void TPG::thread_p_shl_i_fu_218_p3() {
    p_shl_i_fu_218_p3 = esl_concat<18,5>(reg_shift_reg_V_0_3.read(), ap_const_lv5_0);
}

void TPG::thread_r_V_2_fu_252_p2() {
    r_V_2_fu_252_p2 = (!p_neg_i_cast_fu_236_p1.read().is_01() || !p_shl1_i_cast_fu_248_p1.read().is_01())? sc_lv<25>(): (sc_bigint<25>(p_neg_i_cast_fu_236_p1.read()) - sc_biguint<25>(p_shl1_i_cast_fu_248_p1.read()));
}

void TPG::thread_r_V_4_2_i_fu_388_p2() {
    r_V_4_2_i_fu_388_p2 = (!p_shl8_i_cast_fu_384_p1.read().is_01() || !lhs_V_4_2_i_cast6_fu_372_p1.read().is_01())? sc_lv<24>(): (sc_biguint<24>(p_shl8_i_cast_fu_384_p1.read()) - sc_biguint<24>(lhs_V_4_2_i_cast6_fu_372_p1.read()));
}

void TPG::thread_r_V_4_3_i_fu_294_p2() {
    r_V_4_3_i_fu_294_p2 = (!p_shl6_i_cast_fu_280_p1.read().is_01() || !p_shl7_i_cast_fu_290_p1.read().is_01())? sc_lv<24>(): (sc_biguint<24>(p_shl6_i_cast_fu_280_p1.read()) - sc_biguint<24>(p_shl7_i_cast_fu_290_p1.read()));
}

void TPG::thread_r_V_4_i_fu_526_p0() {
    r_V_4_i_fu_526_p0 =  (sc_lv<7>) (ap_const_lv25_1FFFFDD);
}

void TPG::thread_r_V_4_i_fu_526_p1() {
    r_V_4_i_fu_526_p1 =  (sc_lv<18>) (r_V_4_i_fu_526_p10.read());
}

void TPG::thread_r_V_4_i_fu_526_p10() {
    r_V_4_i_fu_526_p10 = esl_zext<25,18>(reg_shift_reg_V_0_2.read());
}

void TPG::thread_tmp2_fu_411_p2() {
    tmp2_fu_411_p2 = (!tmp_19_1_i_cast_fu_368_p1.read().is_01() || !tmp_2_fu_404_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(tmp_19_1_i_cast_fu_368_p1.read()) + sc_bigint<19>(tmp_2_fu_404_p1.read()));
}

void TPG::thread_tmp3_fu_437_p2() {
    tmp3_fu_437_p2 = (!tmp4_fu_426_p2.read().is_01() || !tmp_13_i_reg_557.read().is_01())? sc_lv<19>(): (sc_biguint<19>(tmp4_fu_426_p2.read()) + sc_biguint<19>(tmp_13_i_reg_557.read()));
}

void TPG::thread_tmp4_fu_426_p2() {
    tmp4_fu_426_p2 = (!mul_V_i_fu_345_p4.read().is_01() || !tmp_5_fu_408_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(mul_V_i_fu_345_p4.read()) + sc_bigint<19>(tmp_5_fu_408_p1.read()));
}

void TPG::thread_tmp_10_fu_120_p4() {
    tmp_10_fu_120_p4 = in_0_lincoeff_V.read().range(23, 16);
}

void TPG::thread_tmp_13_fu_284_p2() {
    tmp_13_fu_284_p2 = (!ap_const_lv21_3.is_01())? sc_lv<21>(): tmp_2_i_fu_195_p2.read() << (unsigned short)ap_const_lv21_3.to_uint();
}

void TPG::thread_tmp_14_fu_465_p3() {
    tmp_14_fu_465_p3 = addconv_3_i_fu_453_p2.read().range(18, 18);
}

void TPG::thread_tmp_17_i_fu_485_p2() {
    tmp_17_i_fu_485_p2 = (!reg_peak_reg_V_0_0.read().is_01() || !o_filOut_V_reg_579.read().is_01())? sc_lv<1>(): (sc_biguint<18>(reg_peak_reg_V_0_0.read()) > sc_biguint<18>(o_filOut_V_reg_579.read()));
}

void TPG::thread_tmp_18_i_fu_494_p2() {
    tmp_18_i_fu_494_p2 = (!reg_peak_reg_V_0_0.read().is_01() || !reg_peak_reg_V_0_1.read().is_01())? sc_lv<1>(): (sc_biguint<18>(reg_peak_reg_V_0_0.read()) > sc_biguint<18>(reg_peak_reg_V_0_1.read()));
}

void TPG::thread_tmp_19_1_i_cast_fu_368_p1() {
    tmp_19_1_i_cast_fu_368_p1 = esl_zext<19,16>(tmp_19_1_i_fu_354_p4.read());
}

void TPG::thread_tmp_19_1_i_fu_354_p4() {
    tmp_19_1_i_fu_354_p4 = reg_shift_reg_V_0_1.read().range(17, 2);
}

void TPG::thread_tmp_1_fu_394_p4() {
    tmp_1_fu_394_p4 = r_V_4_2_i_fu_388_p2.read().range(23, 6);
}

void TPG::thread_tmp_1_i_cast_fu_191_p1() {
    tmp_1_i_cast_fu_191_p1 = esl_zext<21,5>(tmp_1_i_fu_185_p2.read());
}

void TPG::thread_tmp_1_i_fu_185_p2() {
    tmp_1_i_fu_185_p2 = (!ap_const_lv5_2.is_01() || !tmp_3_i_cast8_fu_182_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_2) + sc_biguint<5>(tmp_3_i_cast8_fu_182_p1.read()));
}

void TPG::thread_tmp_2_fu_404_p1() {
    tmp_2_fu_404_p1 = esl_sext<19,18>(tmp_1_fu_394_p4.read());
}

void TPG::thread_tmp_2_i_fu_195_p2() {
    tmp_2_i_fu_195_p2 = (!r_V_1_reg_547.read().is_01() || !tmp_1_i_cast_fu_191_p1.read().is_01())? sc_lv<21>(): sc_bigint<21>(r_V_1_reg_547.read()) >> (unsigned short)tmp_1_i_cast_fu_191_p1.read().to_uint();
}

void TPG::thread_tmp_3_i_cast8_fu_182_p1() {
    tmp_3_i_cast8_fu_182_p1 = esl_zext<5,4>(shiftlin_V_reg_537.read());
}

void TPG::thread_tmp_5_fu_408_p1() {
    tmp_5_fu_408_p1 = esl_sext<19,18>(tmp_4_reg_568.read());
}

void TPG::thread_tmp_6_fu_417_p4() {
    tmp_6_fu_417_p4 = r_V_4_i_reg_562.read().range(23, 6);
}

void TPG::thread_tmp_8_fu_432_p2() {
    tmp_8_fu_432_p2 = (!tmp_4_reg_568.read().is_01() || !tmp_6_fu_417_p4.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_4_reg_568.read()) + sc_biguint<18>(tmp_6_fu_417_p4.read()));
}

void TPG::thread_tmp_9_fu_442_p2() {
    tmp_9_fu_442_p2 = (!tmp_7_reg_574.read().is_01() || !tmp_8_fu_432_p2.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_7_reg_574.read()) + sc_biguint<18>(tmp_8_fu_432_p2.read()));
}

void TPG::thread_tmp_fu_364_p1() {
    tmp_fu_364_p1 = esl_zext<18,16>(tmp_19_1_i_fu_354_p4.read());
}

void TPG::thread_tmp_s_fu_447_p2() {
    tmp_s_fu_447_p2 = (!tmp_1_fu_394_p4.read().is_01() || !tmp_fu_364_p1.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_1_fu_394_p4.read()) + sc_biguint<18>(tmp_fu_364_p1.read()));
}

void TPG::thread_uncorrectedADC_V_fu_168_p1() {
    uncorrectedADC_V_fu_168_p1 = in_0_data_input_V.read().range(12-1, 0);
}

void TPG::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

void TPG::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_0_data_input_V\" :  \"" << in_0_data_input_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_0_lincoeff_V\" :  \"" << in_0_lincoeff_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_filOut_V\" :  \"" << out_0_filOut_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_filOut_V_ap_vld\" :  \"" << out_0_filOut_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_peakOut\" :  \"" << out_0_peakOut.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_peakOut_ap_vld\" :  \"" << out_0_peakOut_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

