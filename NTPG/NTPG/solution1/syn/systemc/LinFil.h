// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _LinFil_HH_
#define _LinFil_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "TPG_am_submul_12nbkb.h"
#include "TPG_mac_muladd_7scud.h"

namespace ap_rtl {

struct LinFil : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<14> > data_int_V;
    sc_in< sc_lv<24> > lincoef_V;
    sc_in< sc_lv<18> > shift_reg_0_V_read;
    sc_in< sc_lv<18> > shift_reg_1_V_read;
    sc_in< sc_lv<18> > shift_reg_2_V_read;
    sc_in< sc_lv<18> > shift_reg_3_V_read;
    sc_in< sc_lv<18> > peak_reg_0_V_read;
    sc_in< sc_lv<18> > peak_reg_1_V_read;
    sc_out< sc_lv<18> > ap_return_0;
    sc_out< sc_lv<1> > ap_return_1;
    sc_out< sc_lv<18> > ap_return_2;
    sc_out< sc_lv<18> > ap_return_3;
    sc_out< sc_lv<18> > ap_return_4;
    sc_out< sc_lv<18> > ap_return_5;
    sc_out< sc_lv<18> > ap_return_6;
    sc_out< sc_lv<18> > ap_return_7;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    LinFil(sc_module_name name);
    SC_HAS_PROCESS(LinFil);

    ~LinFil();

    sc_trace_file* mVcdFile;

    TPG_am_submul_12nbkb<1,1,12,12,8,21>* TPG_am_submul_12nbkb_U1;
    TPG_mac_muladd_7scud<1,1,7,18,25,25>* TPG_mac_muladd_7scud_U2;
    sc_signal< sc_lv<18> > peak_reg_0_V_read_1_reg_419;
    sc_signal< sc_lv<18> > ap_pipeline_reg_pp0_iter1_peak_reg_0_V_read_1_reg_419;
    sc_signal< sc_lv<18> > ap_pipeline_reg_pp0_iter2_peak_reg_0_V_read_1_reg_419;
    sc_signal< sc_lv<18> > shift_reg_3_V_read_1_reg_425;
    sc_signal< sc_lv<18> > shift_reg_2_V_read_1_reg_431;
    sc_signal< sc_lv<18> > ap_pipeline_reg_pp0_iter1_shift_reg_2_V_read_1_reg_431;
    sc_signal< sc_lv<18> > ap_pipeline_reg_pp0_iter2_shift_reg_2_V_read_1_reg_431;
    sc_signal< sc_lv<18> > shift_reg_1_V_read_1_reg_437;
    sc_signal< sc_lv<18> > ap_pipeline_reg_pp0_iter1_shift_reg_1_V_read_1_reg_437;
    sc_signal< sc_lv<18> > ap_pipeline_reg_pp0_iter2_shift_reg_1_V_read_1_reg_437;
    sc_signal< sc_lv<18> > shift_reg_0_V_read_1_reg_443;
    sc_signal< sc_lv<18> > ap_pipeline_reg_pp0_iter1_shift_reg_0_V_read_1_reg_443;
    sc_signal< sc_lv<18> > ap_pipeline_reg_pp0_iter2_shift_reg_0_V_read_1_reg_443;
    sc_signal< sc_lv<12> > uncorrectedADC_V_fu_116_p1;
    sc_signal< sc_lv<12> > uncorrectedADC_V_reg_450;
    sc_signal< sc_lv<12> > base_V_fu_144_p1;
    sc_signal< sc_lv<12> > base_V_reg_455;
    sc_signal< sc_lv<4> > shiftlin_V_reg_460;
    sc_signal< sc_lv<4> > ap_pipeline_reg_pp0_iter1_shiftlin_V_reg_460;
    sc_signal< sc_lv<8> > mult_reg_465;
    sc_signal< sc_lv<1> > tmp_9_fu_168_p2;
    sc_signal< sc_lv<1> > tmp_9_reg_470;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter1_tmp_9_reg_470;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter2_tmp_9_reg_470;
    sc_signal< sc_lv<21> > grp_fu_404_p3;
    sc_signal< sc_lv<21> > r_V_reg_475;
    sc_signal< sc_lv<25> > mul_V_fu_215_p2;
    sc_signal< sc_lv<25> > mul_V_reg_480;
    sc_signal< sc_lv<18> > linearizerOutput_V_fu_239_p1;
    sc_signal< sc_lv<18> > linearizerOutput_V_reg_485;
    sc_signal< sc_lv<25> > grp_fu_412_p3;
    sc_signal< sc_lv<25> > tmp1_reg_490;
    sc_signal< sc_lv<24> > tmp4_fu_294_p2;
    sc_signal< sc_lv<24> > tmp4_reg_495;
    sc_signal< sc_lv<8> > tmp_6_fu_120_p4;
    sc_signal< sc_lv<1> > icmp_fu_130_p2;
    sc_signal< sc_lv<24> > p_lincoef_V_fu_136_p3;
    sc_signal< sc_lv<23> > tmp_fu_183_p3;
    sc_signal< sc_lv<24> > p_shl4_cast_fu_190_p1;
    sc_signal< sc_lv<24> > p_neg_fu_194_p2;
    sc_signal< sc_lv<20> > tmp_1_fu_204_p3;
    sc_signal< sc_lv<25> > p_neg_cast_fu_200_p1;
    sc_signal< sc_lv<25> > p_shl5_fu_211_p1;
    sc_signal< sc_lv<5> > tmp_cast6_fu_221_p1;
    sc_signal< sc_lv<5> > tmp_2_fu_224_p2;
    sc_signal< sc_lv<21> > tmp_2_cast_fu_230_p1;
    sc_signal< sc_lv<21> > tmp_3_fu_234_p2;
    sc_signal< sc_lv<23> > p_shl_fu_249_p3;
    sc_signal< sc_lv<23> > tmp_28_3_cast_fu_246_p1;
    sc_signal< sc_lv<23> > mt_fu_256_p2;
    sc_signal< sc_lv<21> > tmp_11_fu_274_p2;
    sc_signal< sc_lv<23> > p_shl1_fu_266_p3;
    sc_signal< sc_lv<23> > p_shl2_fu_280_p1;
    sc_signal< sc_lv<23> > mul_V_4_fu_284_p2;
    sc_signal< sc_lv<24> > mul_V_4_cast_fu_290_p1;
    sc_signal< sc_lv<24> > mul_V_3_cast_fu_262_p1;
    sc_signal< sc_lv<22> > tmp_4_fu_300_p3;
    sc_signal< sc_lv<25> > mul_V_2_cast_fu_307_p1;
    sc_signal< sc_lv<25> > tmp4_cast_fu_311_p1;
    sc_signal< sc_lv<25> > tmp3_fu_314_p2;
    sc_signal< sc_lv<25> > acc_V_4_fu_320_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_335_p3;
    sc_signal< sc_lv<18> > filterOutput_V_cast5_fu_325_p4;
    sc_signal< sc_lv<18> > o_filOut_V_fu_343_p3;
    sc_signal< sc_lv<1> > tmp_8_fu_351_p2;
    sc_signal< sc_lv<1> > agg_result_peakOut_1_fu_356_p2;
    sc_signal< sc_lv<12> > grp_fu_404_p0;
    sc_signal< sc_lv<12> > grp_fu_404_p1;
    sc_signal< sc_lv<8> > grp_fu_404_p2;
    sc_signal< sc_lv<7> > grp_fu_412_p0;
    sc_signal< sc_lv<18> > grp_fu_412_p1;
    sc_signal< sc_lv<13> > grp_fu_404_p00;
    sc_signal< sc_lv<13> > grp_fu_404_p10;
    sc_signal< sc_lv<21> > grp_fu_404_p20;
    sc_signal< sc_lv<25> > grp_fu_412_p10;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<21> ap_const_lv21_3;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<18> ap_const_lv18_0;
    static const sc_lv<25> ap_const_lv25_1FFFFDD;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc_V_4_fu_320_p2();
    void thread_agg_result_peakOut_1_fu_356_p2();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_base_V_fu_144_p1();
    void thread_filterOutput_V_cast5_fu_325_p4();
    void thread_grp_fu_404_p0();
    void thread_grp_fu_404_p00();
    void thread_grp_fu_404_p1();
    void thread_grp_fu_404_p10();
    void thread_grp_fu_404_p2();
    void thread_grp_fu_404_p20();
    void thread_grp_fu_412_p0();
    void thread_grp_fu_412_p1();
    void thread_grp_fu_412_p10();
    void thread_icmp_fu_130_p2();
    void thread_linearizerOutput_V_fu_239_p1();
    void thread_mt_fu_256_p2();
    void thread_mul_V_2_cast_fu_307_p1();
    void thread_mul_V_3_cast_fu_262_p1();
    void thread_mul_V_4_cast_fu_290_p1();
    void thread_mul_V_4_fu_284_p2();
    void thread_mul_V_fu_215_p2();
    void thread_o_filOut_V_fu_343_p3();
    void thread_p_lincoef_V_fu_136_p3();
    void thread_p_neg_cast_fu_200_p1();
    void thread_p_neg_fu_194_p2();
    void thread_p_shl1_fu_266_p3();
    void thread_p_shl2_fu_280_p1();
    void thread_p_shl4_cast_fu_190_p1();
    void thread_p_shl5_fu_211_p1();
    void thread_p_shl_fu_249_p3();
    void thread_tmp3_fu_314_p2();
    void thread_tmp4_cast_fu_311_p1();
    void thread_tmp4_fu_294_p2();
    void thread_tmp_11_fu_274_p2();
    void thread_tmp_12_fu_335_p3();
    void thread_tmp_1_fu_204_p3();
    void thread_tmp_28_3_cast_fu_246_p1();
    void thread_tmp_2_cast_fu_230_p1();
    void thread_tmp_2_fu_224_p2();
    void thread_tmp_3_fu_234_p2();
    void thread_tmp_4_fu_300_p3();
    void thread_tmp_6_fu_120_p4();
    void thread_tmp_8_fu_351_p2();
    void thread_tmp_9_fu_168_p2();
    void thread_tmp_cast6_fu_221_p1();
    void thread_tmp_fu_183_p3();
    void thread_uncorrectedADC_V_fu_116_p1();
};

}

using namespace ap_rtl;

#endif
